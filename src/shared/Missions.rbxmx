<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<Meta name="ExplicitAutoJoints">true</Meta>
	<External>null</External>
	<External>nil</External>
	<Item class="Folder" referent="RBX3B43EC23743049EBBF5739C435058F32">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Name">Missions</string>
			<int64 name="SourceAssetId">89760436366160</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Script" referent="RBX5EA470C4720D43B3B5F0C9D1FEBC7F94">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">README</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{9dd22af6-3119-47b0-8e15-8f728f88b252}</string>
				<ProtectedString name="Source"><![CDATA[-- YOU WILL ALSO NEED TO INSTALL THE CORE PACKAGE (AssetId 94918533221001).
-- PLACE BOTH PACKAGES IN REPLICATED STORAGE AND FOLLOW THESE INSTRUCTIONS:

-- Suggestion: Copy and paste the inner contents of the block comment below into a Markdown editor for optimal readability

--[[
# Missions

This comprehensive guide will provide a step-by-step walkthrough of integrating Missions into your experience.

Right now, the designs match an out-of-the-box style. You’ll be able to adjust the ui to match your own experience!

<!-- <p align="center">
    <img src=/docs/images/BundlesPreview.png width=75%>
</p> -->

**If you encounter any challenges, have questions, or want to share feedback along the way, don't hesitate to reach out to us! We are available to assist you and ensure a smooth integration experience.**

## Missions

Missions each have a set of tasks that must be finished to complete the mission, configuration options, and optional display metadata.

_See ReplicatedStorage.Missions.Configs.Types file for luau mission typing_
### Mission Configuration Options
#### Required Mission Fields
All missions must have an Id, a category, and a list of tasks. The tasks list may be empty, meaning the mission’s rewards can be claimed immediately.

1. `missionId` – this is the main Missions table key. All missions are identified by their own unique string.
1. `categoryId` – missions must belong to a category, and are grouped by category in the UI.
1. `tasks` – a list of tasks that must be completed to complete the mission.

#### Mission Unlock Conditions
Missions are unlocked for a player automatically by default and can be completed exactly once. Some configuration options can be used to alter this behavior.

1. `prerequisites` (optional) – a list of other missionIds that must be completed before the mission can be unlocked.
1. `manualOnly` (optional) – disables the automatic unlocking of the mission. Instead, a function must be called to unlock the mission. Any other unlock conditions must still be met as well.
1. `availableAfterUtc` (optional) – the mission cannot be unlocked before the specified time in UTC.
1. `availableBeforeUtc` (optional) – the mission cannot be unlocked after the specified time in UTC. If it is unlocked but not completed before this time, the mission will be failed.
1. `repeatable` (optional) – the mission becomes unlocked again after it is completed.
1. `repeatLimit` (optional) – if the mission is repeatable, it cannot be repeated more than this many times.
1. `repeatCooldownSeconds` (optional) – if the mission is repeatable, there is a delay before it becomes unlocked.
1. `expireSeconds` (optional) – if the mission is unlocked and not completed within the specified number of seconds, then it will fail instead.
1. `expireCountOffline` (optional) – if the mission has expireSeconds and expireCountOffline is set to true, then time while the player is not actually in the experience will count towards mission expiration. 

#### Mission Metadata
Missions have some metadata that specifies how they will be displayed in the Missions user interface. All metadata fields as well as the entire table itself are optional.
1. `displayName` – a name to display for the mission in the user interface instead of the missionId.
1. `description` –  a longer block of text that provides additional information or context about the mission.
1. `visibleAfterComplete` – if set to true the mission will show up in the list of missions even after it is completed but marked as completed.
1. `visibleAfterFailed` – if set to true the mission will show up in the list of missions even after it is failed but marked as failed.
1. `visibleBeforeUnlocked` – if set to true the mission will be visible, but locked, in the list of missions before it is available for completion.
1. `invisibleWhileActive` – if set to true the mission will be invisible even while actively in progress.
1. `rewards` – a list of reward display information.

    1. `assetId` – the image ID that should be shown in the missions UI under the rewards for a quest. This is required if a reward is present.
    1. `displayName` – the name that be shown in the missions UI under the icon.

### Tasks
Each mission can have zero or more tasks. Once all of a mission’s tasks are completed, it may be claimed for the user to collect any rewards associated with the mission. A mission with zero tasks is claimable immediately after it is unlocked. 
Each task has a taskId - the key associated with the task for a given mission.

Tasks come in two types:
1. Timed tasks

    1. Start and stop the task at different points in time.
    1. A certain amount of time must pass while the task's timer is running and then the task is completed.
3. Count tasks.

    1. Add to or set the task's progress.
    1. Once the progress reaches a set value, the task is completed.
#### Shared Task Fields
1. `taskType` – specifies what type of task the task is, count or timed.
1. `counter` (optional) – the counter this task tracks. Counters are player specific persistent storage for a number or a timer. Multiple tasks can track a single counter, for example, if more than one task tracks how many coins a player has collected then they all can share the same “coins” counter. These tasks can independently track new coins collected, starting from zero, or continue counting from the counter value (all coins already collected).

    1. `counterId` – the ID of the counter to be tracked. You'll use this id to get or set the value of the counter.
    1. `continueFromCounter` (optional) – if set to true, the task progress will directly match the value of the counter rather than the amount it has increased.
1. `metadata` (optional) – information about how the task will be displayed in the UI.

    1. `displayName` – name of the task, used when shown in the UI.
    1. `numericType` (optional) – how the progress number in the task should be displayed.

        1. Fraction, ex. 5/10 or 5k/50k
        1. Percentage, ex. 50% or 10%
        1. LongFraction, ex. 5/10 or 5000/50000
        1. Boolean, ex. Incomplete
1. `callToAction` (optional) - a button that triggers a callback function.

    1. `callback` - function triggered by the callToAction button. 
    1. `buttonText` - text that is displayed in the button UI. 

#### Count Tasks
Count tasks have a required value, and then task progress is added until it meets the required amount, at which point the task is complete.
1. `goalCount` – the progress required to complete the task.

#### Time Tasks
Time tasks have a target amount of time spent, and are started and stopped. When the target amount of time is met, the task is completed.
1. `goalSeconds` – the number of seconds that must pass to complete the task.
1. `startImmediately` – if the task should start counting time as soon as it is unlocked, rather than only after it is started.
1. `includesOfflineTime` – if the task should include time spent while the player is not actively in the experience.

## Configuring Categories
Categories do not have to be explicitly defined to be used as the category for a mission as default values will be used, but they can be configured in ReplicatedStorage.Missions.Configs.Categories to add additional effects to the category. 
Categories are identified by unique CategoryIds, the same ones referenced in the missions config.

#### Category Fields
1. `repeatDelaySeconds` (optional) – if set, all missions in the category are reset every time the specified amount of time passes, and may be unlocked, completed, and their rewards claimed again. This is separate from repeatable missions, which are repeatable within a given category repeat.

## Integration

### Step 1: Open the template experience

1. Drag the `FeaturePackagesCore` (if not already installed) and `Missions` feature template package(s) into ReplicatedStorage of your own experience.
    - [FeaturePackagesCore](https://create.roblox.com/store/asset/94918533221001)
    - [Missions](https://create.roblox.com/store/asset/89760436366160)

Note that, to function correctly in Studio you’ll need to enable the following setting so that DataStore calls work as expected.

<p align="center">
    <img src=/docs/images/GameSettingsSecurity.png width=50%>
</p>

### Step 2: Define Missions

Missions completable in your experience are defined within ReplicatedStorage.Missions.Configs.Missions (with types exported from the Types script in the same folder). I’ve already put some example missions in this file for you!


### Step 3: Configure Constants (+Sounds)

Constants for FeaturePackages packages live in two spots:

1. Shared constants can be found in ReplicatedStorage.FeaturePackagesCore.Configs.SharedConstants.

2. Package-specific constants, in this case Missions, can be found in ReplicatedStorage.Missions.Configs.Constants.

The main things you might want to adjust here are:

- Sound Asset Ids

  - We have some pre-made FeaturePackages sounds. If you want these sounds, add them to your inventory first:
        - [Prompt Open](https://create.roblox.com/store/asset/17161253544)
        - [Prompt Close](https://create.roblox.com/store/asset/17161255584)
        - [Purchase Effect](https://create.roblox.com/store/asset/17161210152)
        - [Purchase Button Selected](https://create.roblox.com/store/asset/17161225362)
        - [Button Selection](https://create.roblox.com/store/asset/17161216230)
        - [Button Hover](https://create.roblox.com/store/asset/17161204665)

Additionally, you can find strings for translation broken out into one location ReplicatedStorage.FeaturePackagesCore.Configs.TranslationStrings.

### Step 4: Integrate Server Logic

**Take a look at ReplicatedStorage.Missions.Server.Examples.MissionsExample, which shows how your server will interact with Missions (and the above methods on the ModuleScript).**

Mainly you will need to hook up four things once dragging Missions into your experience:

1. Define missions in your missions config.

1. Add logic to your experience to update task progress or the counters the progress is tied to.

   1. To increase the progress on a mission `Jumping` with a `Jumps` task
        ```lua
        Missions.addProgressToTask(player, "Jumping", "Jumps", 1)
        ```
   1. To start the timer on a mission `BattlingTime` with a `TimeInBattle` task
        ```lua
        Missions.startTimedTask(player, "BattlingTime", "TimeInBattle")
        ```
   1. To stop the timer on a mission `BattlingTime` with a `TimeInBattle` task
        ```lua
        Missions.stopTimedTask(player, "BattlingTime", "TimeInBattle")
        ```
   1. To increase the progress on all tasks tied to the `Jumps` Counter.
        ```lua
        CounterSystem.addCounter(player, "Jumps", 1)
        ```
   1. To start the timer on all timed tasks tied to the `TimeInBattle` Timer Counter.
        ```lua
        CounterSystem.startTimer(player, "TimeInBattle")
        ```
   1. To stop the timer on all timed tasks tied to the `TimeInBattle` Timer Counter.
        ```lua
        CounterSystem.stopTimer(player, "TimeInBattle")
        ```
1. Set mission completion handlers, and optionally unlock or fail handlers. Use the completion handler to award the rewards from the mission in your experience.

    ```lua
    local function completeHandler(player: Player, missionId: Types.MissionId)
        print(`{player} completed mission {missionId}`)
        -- Award player their rewards.
    end

    Missions.setCompletionHandler(missionId, completeHandler)
    ```

4. Unlock missions that are not unlocked automatically. Missions logic will ensure that all mission requirements are met before the mission is completed and its rewards are collectible.
   ```lua
    Missions.unlockMission(player, "Manual")
   ```

### Step 5: Adjust the UI (optional)

By modifying the template objects (colors, font, transparency, etc) you can adjust what the Missions UI will look like! Just keep in mind that if you move any of the objects around hierarchically, then the code will not be able to find them and you’ll need to make adjustments in MissionsUI.

In ReplicatedStorage.Missions.Configs.Constants you can enable SingleTaskMode to display a progress bar for a task directly on the mission itself for missions that only have a single task.

### Step 6: Replace the UI (optional)

If your experience already has an existing UI that you would like to integrate with Missions, the client ModuleScript `MissionsClient` contains all the functions necessary to get the information about a player’s missions sent from the server.



--]]]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX0632AE5790B5465AAEB2A49F586EC93E">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Configs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBX13A6A24DA30A4320B2A9D62707B23EF9">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Missions</string>
					<string name="ScriptGuid">{8f8f40ea-0d9f-463e-9f45-f9be1f10b25b}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

--[[
	This is an example of a Mission configuration. Edit this file to add your own Missions.
--]]

local Types = require(script.Parent.Types)

local Missions: Types.MissionsList = {

StealPhone = {
		categoryId = "Roadman",
		tasks = {
			Steal = {
				taskType = Types.TaskType.Count,
				goalCount = 1,
			},
		},
		metadata = {
			displayName = " 'Borrow' a phone",
			visibleAfterComplete = true,
			visibleBeforeUnlocked = false,
			rewards = {
				{
					icon = 13537431379,
					displayName = "Stolen Phone",
				},
			},
		},
		manualOnly = true,	
	},


}

return Missions
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX5C184267EBD24589A038E678B28B6304">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Constants</string>
					<string name="ScriptGuid">{3895aabc-a907-4907-b97f-e3a4fd61a0ac}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

--[[
	Constants for variables shared by Missions.
--]]

local Constants = {
	Analytics = {
		Funnel = {
			NAME = "Missions",
		},
	},
	Colors = {
		TEXT_ENABLED = Color3.fromRGB(255, 255, 255),
		TEXT_DISABLED = Color3.fromRGB(131, 135, 142),
	},
	Layout = {
		Missions = {
			SingleTaskMode = false,
		},
	},
}

return Constants
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXB2FC3BDCB82344EF8C79F6ED1B6C3D26">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Types</string>
					<string name="ScriptGuid">{1c468750-adba-4586-90e5-f891d8f983dd}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

--[[
	Types used to enforce Mission and Task schema.
--]]

local ReplicatedStorage = game:GetService("ReplicatedStorage").Shared
local TimerSystem = require(ReplicatedStorage.FeaturePackagesCore.Modules.TimerSystem)

export type CategoryId = string
export type CounterId = string
export type MissionId = string
export type TaskId = string
export type AssetId = number

-- TrackName is used for SeasonPasses.
export type TrackName = string

export type CategoriesList = { [CategoryId]: Category? }

export type Category = {
	-- Causes all missions in the category to restart after some amount of seconds.
	-- This allows the creation of Daily or Weekly categories where every mission in the category restarts after the time frame.
	-- The timer starts when the player logs in.
	-- If the player does not rejoin the experience for longer than the repeat delay then missions will reset
	-- ... and the timer starts over the next time they rejoin.
	repeatDelaySeconds: number?,
}

export type MissionsList = { [MissionId]: Mission? }

export type MissionMetadata = {
	displayName: string?,
	visibleAfterComplete: boolean?,
	visibleAfterFailed: boolean?,
	visibleBeforeUnlocked: boolean?,
	invisibleWhileActive: boolean?,
	rewards: { MetadataReward }?,
}

export type MetadataReward = {
	icon: AssetId,
	displayName: string?,
}

export type TaskMetadata = {
	numericType: FractionType?,
	displayName: string?,
}

export type FractionType = "Fraction" | "Percentage" | "LongFraction" | "Boolean"

export type TaskType = "Count" | "Time"

export type TaskCounter = {
	counterId: CounterId,

	-- Whether or not the task continues from the existing counter progress.
	-- ... if true, the task progress will initialize from the existing counter progress and increments with future counter changes.
	-- ... if false, the task progress still increments with future counter changes, but will initialize from zero.
	continueFromCounter: boolean?,
}

export type TaskCallToActionFunction = (missionId: MissionId, taskId: TaskId) -> boolean

export type TaskCallToAction = {
	callback: TaskCallToActionFunction,
	buttonText: string?,
}

export type TaskBase = {
	taskType: TaskType,
	counter: TaskCounter?,
	metadata: TaskMetadata?,
	callToAction: TaskCallToAction?,
}

export type CountTask = TaskBase & {
	taskType: "Count",
	goalCount: number,
}

export type TimeTask = TaskBase & {
	taskType: "Time",
	startImmeadiately: boolean?,
	includesOfflineTime: boolean?,
	goalSeconds: number,
}

export type Task = CountTask | TimeTask

export type Mission = {
	prerequisites: { MissionId }?,
	tasks: { [TaskId]: Task? },

	categoryId: CategoryId,
	manualOnly: boolean?,

	availableAfterUtc: DateTime?,
	availableBeforeUtc: DateTime?,

	repeatable: boolean?,
	repeatLimit: number?,
	repeatCooldownSeconds: number?,

	expireSeconds: number?,
	expireCountOffline: boolean?,

	metadata: MissionMetadata?,

	requiredTrackName: TrackName?,
}

-- Fields stored for an individual mission
export type MissionData = {
	startedAtUtc: number?,
	expirationTimer: TimerSystem.Timer?,
	timesEnded: number?,
	failed: boolean?,
	completed: boolean?,
	completedBefore: boolean?,
	taskProgress: { [TaskId]: number? },
	taskTimers: { [TaskId]: TimerSystem.Timer? },
}

-- Individual mission data type stored for a player. Where key is the MissionId.
export type PlayerMissionData = {
	[MissionId]: MissionData?,
}

local Types = {
	TaskType = {
		Count = "Count" :: "Count",
		Time = "Time" :: "Time",
	},
	FractionType = {
		Fraction = "Fraction" :: "Fraction",
		Percentage = "Percentage" :: "Percentage",
		LongFraction = "LongFraction" :: "LongFraction",
		Boolean = "Boolean" :: "Boolean",
	},
}

return Types
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX62F50395EFDA4B23ABBE77CD74E561FB">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Categories</string>
					<string name="ScriptGuid">{b39ba9f4-4b69-438f-b59c-4c201494e727}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

local Types = require(script.Parent.Types)

local Categories: Types.CategoriesList = {
	Minutely = {
		repeatDelaySeconds = 60, -- One minute
	},
}

return Categories
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX726529A939E54CAEBDBD97B8D5E302DC">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">InstrumentationTypes</string>
					<string name="ScriptGuid">{6a87df2c-0704-4dd7-b558-b43441ad627f}</string>
					<ProtectedString name="Source"><![CDATA[export type FunnelStepName = "MissionUnlocked" | "MissionOpened" | "MissionCompleted" | "MissionClaimed" | "MissionExpired"

local FunnelStepName = {
	MissionUnlocked = "MissionUnlocked" :: "MissionUnlocked",
	MissionOpened = "MissionOpened" :: "MissionOpened",
	MissionExpired = "MissionExpired" :: "MissionExpired",
	MissionCompleted = "MissionCompleted" :: "MissionCompleted",
	MissionClaimed = "MissionClaimed" :: "MissionClaimed",
}

local Types = {
	FunnelStepName = FunnelStepName,
}

return Types
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBXD621DE3B01D44B6EB8DB12A23921D76A">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Events</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="RemoteEvent" referent="RBX59DF89B1B336467CBB80E6892E265A39">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">MissionUpdatedRemoteEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX9B0C49604A674E9CA1A1A56F5CAE95F8">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">TaskUpdatedRemoteEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX3670421207174C1EB6A1DEEA879F03F6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">CategoryTimerUpdatedRemoteEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBXC31E80E157C4489A8A7B480218E53859">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">ClaimMissionRemoteEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBXA50394CC3EF348E998E82005DF3B58E4">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">RequestMissionUpdateRemoteEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="BindableEvent" referent="RBXD7304A8B0CA648F6BC80FD620A203CE2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">MissionAnalyticsBindableEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBXB539F478A5E04A209758B6777CC05721">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">MissionAnalyticsRemoteEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="BindableEvent" referent="RBX3B32AC6000F441889AE8C435EB5B5D4A">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">NotificationBindableEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBXBA182EF974D74C56885BAB17617576C6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">UnlockMissionEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX944FB3A76689446CA2524B30BD89D515">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Functions</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="RemoteFunction" referent="RBXD23094C3303549B38E19B4389CC5BD44">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">CallToActionRemoteFunction</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="BindableFunction" referent="RBXA7709DF64D0F46E8BEF1D71A9F89FFEC">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">GetMissionDataBindableFunction</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX92682B6749D04B2DA5E581963045DDE1">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">GetMissionDataRemoteFunction</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX54D08AB47A8844378214E157912B63AF">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Objects</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="CanvasGroup" referent="RBXC91E5B927F984093A1299F58C402CAB2">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>0.5</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<Color3 name="GroupColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="GroupTransparency">0</float>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Prompt</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.5</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.899999976</XS>
						<XO>0</XO>
						<YS>0.899999976</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="ImageLabel" referent="RBXDCD5E9CCB8D043339ED5C044A44B8430">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.0666666701</R>
							<G>0.0666666701</G>
							<B>0.0666666701</B>
						</Color3>
						<float name="BackgroundTransparency">0.0299999993</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><null></null></Content>
						<Color3 name="ImageColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Background</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.479612648</YS>
							<YO>0</YO>
						</UDim2>
						<token name="ResampleMode">0</token>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<float name="SliceScale">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UDim2 name="TileSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="Visible">true</bool>
						<int name="ZIndex">0</int>
					</Properties>
					<Item class="UISizeConstraint" referent="RBX1DD12C0026F24F5687A7FE86E191F500">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Vector2 name="MaxSize">
								<X>1000000000</X>
								<Y>1000000000</Y>
							</Vector2>
							<Vector2 name="MinSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<string name="Name">UISizeConstraint</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="UICorner" referent="RBX82C1B15F680C4C0C890630022735022E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0.0199999996</S>
								<O>0</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="UIGradient" referent="RBX75712ECAFB2447E28F6C88619D252BEF">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<ColorSequence name="Color">0 0 0 0 0 0.825 0 0 0 0 1 1 1 1 0 </ColorSequence>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<string name="Name">UIGradient</string>
							<Vector2 name="Offset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="Rotation">0</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<NumberSequence name="Transparency">0 0.07 0 1 0.07 0 </NumberSequence>
						</Properties>
					</Item>
				</Item>
				<Item class="UICorner" referent="RBXFDA30E5D40D54D9FBC18AF93EBC2FCB9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<UDim name="CornerRadius">
							<S>0.0199999996</S>
							<O>0</O>
						</UDim>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">UICorner</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="UIAspectRatioConstraint" referent="RBX055B2C4332984C93BBCA3C191D92AB4A">
					<Properties>
						<float name="AspectRatio">1.70000005</float>
						<token name="AspectType">0</token>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<token name="DominantAxis">0</token>
						<string name="Name">UIAspectRatioConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX80AB542B8EED44AF814C76A73C731C73">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Content</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX3CD13B82186F4E56A78F85D6477BB913">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Bottom</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0.860000014</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBXD59E36349AFB4013A88369CE6127D4A4">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">MissionBottomFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.899999976</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ScrollingFrame" referent="RBXA29E08051C4F43AFB5E5C58EB95B95FD">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>1</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticCanvasSize">2</token>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
									<Vector2 name="CanvasPosition">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<UDim2 name="CanvasSize">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">true</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<token name="ElasticBehavior">0</token>
									<token name="HorizontalScrollBarInset">0</token>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
									<string name="Name">MissionDetail</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<Color3 name="ScrollBarImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="ScrollBarImageTransparency">0</float>
									<int name="ScrollBarThickness">4</int>
									<token name="ScrollingDirection">2</token>
									<bool name="ScrollingEnabled">true</bool>
									<bool name="Selectable">true</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">true</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.49000001</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
									<token name="VerticalScrollBarInset">1</token>
									<token name="VerticalScrollBarPosition">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UIListLayout" referent="RBX80C61F5BAAAD4E7686095A6DF7F06F9E">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="FillDirection">1</token>
										<token name="HorizontalAlignment">1</token>
										<token name="HorizontalFlex">0</token>
										<token name="ItemLineAlignment">0</token>
										<string name="Name">UIListLayout</string>
										<UDim name="Padding">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="SortOrder">2</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<token name="VerticalAlignment">1</token>
										<token name="VerticalFlex">0</token>
										<bool name="Wraps">false</bool>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX631B84B290D54B1488E2324531D7D630">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">1</int>
										<string name="Name">TaskFrame</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0.100000001</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX8BBE745E0D7E4CF88150154F86E994E2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>1</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">0.949999988</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">BottomDivider</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>1</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>1</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXE789C25FE070401BB09C177F51F07ADC">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">0.949999988</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">TopDivider</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>1</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX7D6A7936C6C447BF8A558C7F36C43024">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBXD7E25725E32949E0A01DE6E305DEEEAB">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">1</int>
												<string name="Name">Top</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="ImageLabel" referent="RBXD21F7B5E85CC472B987A5169FCC825C1">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>1</X>
														<Y>0.5</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>rbxassetid://18412164349</url></Content>
													<Color3 name="ImageColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<string name="Name">Checkmark</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0.5</YS>
														<YO>0</YO>
													</UDim2>
													<token name="ResampleMode">0</token>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<token name="ScaleType">3</token>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0.5</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">2</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<float name="SliceScale">1</float>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<UDim2 name="TileSize">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<bool name="Visible">false</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX92BBA4FDE5764476B8DB0770F538DD67">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0.5</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<Font name="FontFace">
														<Family><url>rbxassetid://16658237174</url></Family>
														<Weight>400</Weight>
														<Style>Normal</Style>
													</Font>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<float name="LineHeight">1</float>
													<string name="LocalizationMatchIdentifier"></string>
													<string name="LocalizationMatchedSourceText"></string>
													<int name="MaxVisibleGraphemes">-1</int>
													<string name="Name">NameLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<string name="OpenTypeFeatures"></string>
													<UDim2 name="Position">
														<XS>0.00999999978</XS>
														<XO>0</XO>
														<YS>0.5</YS>
														<YO>0</YO>
													</UDim2>
													<bool name="RichText">false</bool>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>0.5</XS>
														<XO>0</XO>
														<YS>0.400000006</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<string name="Text">Collect XP</string>
													<Color3 name="TextColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<token name="TextDirection">0</token>
													<bool name="TextScaled">true</bool>
													<float name="TextSize">14</float>
													<Color3 name="TextStrokeColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<token name="TextTruncate">0</token>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX9E88DC7667CD4F2685872C7BED8DE3E8">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<Font name="FontFace">
														<Family><url>rbxassetid://16658237174</url></Family>
														<Weight>400</Weight>
														<Style>Normal</Style>
													</Font>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<float name="LineHeight">1</float>
													<string name="LocalizationMatchIdentifier"></string>
													<string name="LocalizationMatchedSourceText"></string>
													<int name="MaxVisibleGraphemes">-1</int>
													<string name="Name">ProgressLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<string name="OpenTypeFeatures"></string>
													<UDim2 name="Position">
														<XS>0.5</XS>
														<XO>0</XO>
														<YS>0.25</YS>
														<YO>0</YO>
													</UDim2>
													<bool name="RichText">false</bool>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>0.479999989</XS>
														<XO>0</XO>
														<YS>0.400000006</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<string name="Text">1000/5000</string>
													<Color3 name="TextColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<token name="TextDirection">0</token>
													<bool name="TextScaled">true</bool>
													<float name="TextSize">14</float>
													<Color3 name="TextStrokeColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<token name="TextTruncate">0</token>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">1</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
												<Item class="UIPadding" referent="RBXEB510EC8D80B46439B4B413E909AE4E8">
													<Properties>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
														<bool name="DefinesCapabilities">false</bool>
														<string name="Name">UIPadding</string>
														<UDim name="PaddingBottom">
															<S>0.0500000007</S>
															<O>0</O>
														</UDim>
														<UDim name="PaddingLeft">
															<S>0</S>
															<O>0</O>
														</UDim>
														<UDim name="PaddingRight">
															<S>0</S>
															<O>0</O>
														</UDim>
														<UDim name="PaddingTop">
															<S>0.0500000007</S>
															<O>0</O>
														</UDim>
														<int64 name="SourceAssetId">-1</int64>
														<BinaryString name="Tags"></BinaryString>
													</Properties>
												</Item>
											</Item>
											<Item class="Frame" referent="RBXF6C0AE05269C4064BD95FC8C9B0A4DF0">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>0.36470589</R>
														<G>0.36470589</G>
														<B>0.36470589</B>
													</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<string name="Name">ProgressFrame</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0.75</XS>
														<XO>0</XO>
														<YS>0.649999976</YS>
														<YO>0</YO>
													</UDim2>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>0.230000004</XS>
														<XO>0</XO>
														<YS>0.100000001</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<int64 name="SourceAssetId">-1</int64>
													<token name="Style">0</token>
													<BinaryString name="Tags"></BinaryString>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
												<Item class="UICorner" referent="RBX79B6D09E226D4EACA26BB4B7BA8D432D">
													<Properties>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
														<UDim name="CornerRadius">
															<S>1</S>
															<O>0</O>
														</UDim>
														<bool name="DefinesCapabilities">false</bool>
														<string name="Name">UICorner</string>
														<int64 name="SourceAssetId">-1</int64>
														<BinaryString name="Tags"></BinaryString>
													</Properties>
												</Item>
												<Item class="Frame" referent="RBXF7EA339C81D246798B5C013213F2D8F3">
													<Properties>
														<bool name="Active">false</bool>
														<Vector2 name="AnchorPoint">
															<X>0</X>
															<Y>0</Y>
														</Vector2>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<bool name="AutoLocalize">true</bool>
														<token name="AutomaticSize">0</token>
														<Color3 name="BackgroundColor3">
															<R>1</R>
															<G>1</G>
															<B>1</B>
														</Color3>
														<float name="BackgroundTransparency">0</float>
														<Color3 name="BorderColor3">
															<R>0</R>
															<G>0</G>
															<B>0</B>
														</Color3>
														<token name="BorderMode">0</token>
														<int name="BorderSizePixel">0</int>
														<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
														<bool name="ClipsDescendants">false</bool>
														<bool name="DefinesCapabilities">false</bool>
														<bool name="Draggable">false</bool>
														<bool name="Interactable">true</bool>
														<int name="LayoutOrder">0</int>
														<string name="Name">Bar</string>
														<Ref name="NextSelectionDown">null</Ref>
														<Ref name="NextSelectionLeft">null</Ref>
														<Ref name="NextSelectionRight">null</Ref>
														<Ref name="NextSelectionUp">null</Ref>
														<UDim2 name="Position">
															<XS>0</XS>
															<XO>0</XO>
															<YS>0</YS>
															<YO>0</YO>
														</UDim2>
														<Ref name="RootLocalizationTable">null</Ref>
														<float name="Rotation">0</float>
														<bool name="Selectable">false</bool>
														<token name="SelectionBehaviorDown">0</token>
														<token name="SelectionBehaviorLeft">0</token>
														<token name="SelectionBehaviorRight">0</token>
														<token name="SelectionBehaviorUp">0</token>
														<bool name="SelectionGroup">false</bool>
														<Ref name="SelectionImageObject">null</Ref>
														<int name="SelectionOrder">0</int>
														<UDim2 name="Size">
															<XS>0.200000003</XS>
															<XO>0</XO>
															<YS>1</YS>
															<YO>0</YO>
														</UDim2>
														<token name="SizeConstraint">0</token>
														<int64 name="SourceAssetId">-1</int64>
														<token name="Style">0</token>
														<BinaryString name="Tags"></BinaryString>
														<bool name="Visible">true</bool>
														<int name="ZIndex">1</int>
													</Properties>
													<Item class="UICorner" referent="RBX88D9AD22FE9C4584AB15DC9716206329">
														<Properties>
															<BinaryString name="AttributesSerialize"></BinaryString>
															<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
															<UDim name="CornerRadius">
																<S>1</S>
																<O>0</O>
															</UDim>
															<bool name="DefinesCapabilities">false</bool>
															<string name="Name">UICorner</string>
															<int64 name="SourceAssetId">-1</int64>
															<BinaryString name="Tags"></BinaryString>
														</Properties>
													</Item>
												</Item>
											</Item>
										</Item>
										<Item class="UIListLayout" referent="RBX615B7973208348058A24CFB0EEA2020C">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="DefinesCapabilities">false</bool>
												<token name="FillDirection">1</token>
												<token name="HorizontalAlignment">2</token>
												<token name="HorizontalFlex">0</token>
												<token name="ItemLineAlignment">0</token>
												<string name="Name">UIListLayout</string>
												<UDim name="Padding">
													<S>0</S>
													<O>0</O>
												</UDim>
												<token name="SortOrder">2</token>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<token name="VerticalAlignment">1</token>
												<token name="VerticalFlex">0</token>
												<bool name="Wraps">false</bool>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX5A19FB8CFE3E47BE82BFB3C204A2B05F">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">2</int>
												<string name="Name">Bottom</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXFFAEAD1718544567A54AE36805B212E1">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>1</X>
														<Y>0</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoButtonColor">false</bool>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>0.400000036</R>
														<G>0.400000036</G>
														<B>0.400000036</B>
													</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">
														<R>0.235294133</R>
														<G>0.235294133</G>
														<B>0.235294133</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<Font name="FontFace">
														<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
														<Weight>400</Weight>
														<Style>Normal</Style>
														<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
													</Font>
													<Ref name="HoverHapticEffect">null</Ref>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">2</int>
													<float name="LineHeight">1</float>
													<string name="LocalizationMatchIdentifier"></string>
													<string name="LocalizationMatchedSourceText"></string>
													<int name="MaxVisibleGraphemes">-1</int>
													<bool name="Modal">false</bool>
													<string name="Name">CallToActionButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<string name="OpenTypeFeatures"></string>
													<UDim2 name="Position">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0.25</YS>
														<YO>0</YO>
													</UDim2>
													<Ref name="PressHapticEffect">null</Ref>
													<bool name="RichText">false</bool>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>0.25</XS>
														<XO>0</XO>
														<YS>0.75</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<int64 name="SourceAssetId">-1</int64>
													<token name="Style">0</token>
													<BinaryString name="Tags"></BinaryString>
													<string name="Text"></string>
													<Color3 name="TextColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="TextDirection">0</token>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">14</float>
													<Color3 name="TextStrokeColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<token name="TextTruncate">0</token>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
												<Item class="UICorner" referent="RBX1FA682A2AFE847E2A923B6421A7480D1">
													<Properties>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
														<UDim name="CornerRadius">
															<S>0</S>
															<O>2</O>
														</UDim>
														<bool name="DefinesCapabilities">false</bool>
														<string name="Name">UICorner</string>
														<int64 name="SourceAssetId">-1</int64>
														<BinaryString name="Tags"></BinaryString>
													</Properties>
												</Item>
												<Item class="TextLabel" referent="RBX4FE9CE04C8C84B7A9024005DE73E12C4">
													<Properties>
														<bool name="Active">false</bool>
														<Vector2 name="AnchorPoint">
															<X>0.5</X>
															<Y>0.5</Y>
														</Vector2>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<bool name="AutoLocalize">true</bool>
														<token name="AutomaticSize">0</token>
														<Color3 name="BackgroundColor3">
															<R>1</R>
															<G>1</G>
															<B>1</B>
														</Color3>
														<float name="BackgroundTransparency">1</float>
														<Color3 name="BorderColor3">
															<R>0</R>
															<G>0</G>
															<B>0</B>
														</Color3>
														<token name="BorderMode">1</token>
														<int name="BorderSizePixel">0</int>
														<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
														<bool name="ClipsDescendants">false</bool>
														<bool name="DefinesCapabilities">false</bool>
														<bool name="Draggable">false</bool>
														<Font name="FontFace">
															<Family><url>rbxassetid://16658237174</url></Family>
															<Weight>700</Weight>
															<Style>Normal</Style>
														</Font>
														<bool name="Interactable">true</bool>
														<int name="LayoutOrder">0</int>
														<float name="LineHeight">1</float>
														<string name="LocalizationMatchIdentifier"></string>
														<string name="LocalizationMatchedSourceText"></string>
														<int name="MaxVisibleGraphemes">-1</int>
														<string name="Name">TextLabel</string>
														<Ref name="NextSelectionDown">null</Ref>
														<Ref name="NextSelectionLeft">null</Ref>
														<Ref name="NextSelectionRight">null</Ref>
														<Ref name="NextSelectionUp">null</Ref>
														<string name="OpenTypeFeatures"></string>
														<UDim2 name="Position">
															<XS>0.5</XS>
															<XO>0</XO>
															<YS>0.5</YS>
															<YO>0</YO>
														</UDim2>
														<bool name="RichText">false</bool>
														<Ref name="RootLocalizationTable">null</Ref>
														<float name="Rotation">0</float>
														<bool name="Selectable">false</bool>
														<token name="SelectionBehaviorDown">0</token>
														<token name="SelectionBehaviorLeft">0</token>
														<token name="SelectionBehaviorRight">0</token>
														<token name="SelectionBehaviorUp">0</token>
														<bool name="SelectionGroup">false</bool>
														<Ref name="SelectionImageObject">null</Ref>
														<int name="SelectionOrder">0</int>
														<UDim2 name="Size">
															<XS>0.850000024</XS>
															<XO>0</XO>
															<YS>0.75</YS>
															<YO>0</YO>
														</UDim2>
														<token name="SizeConstraint">0</token>
														<int64 name="SourceAssetId">-1</int64>
														<BinaryString name="Tags"></BinaryString>
														<string name="Text">Go</string>
														<Color3 name="TextColor3">
															<R>1</R>
															<G>1</G>
															<B>1</B>
														</Color3>
														<token name="TextDirection">0</token>
														<bool name="TextScaled">true</bool>
														<float name="TextSize">14</float>
														<Color3 name="TextStrokeColor3">
															<R>0</R>
															<G>0</G>
															<B>0</B>
														</Color3>
														<float name="TextStrokeTransparency">1</float>
														<float name="TextTransparency">0</float>
														<token name="TextTruncate">0</token>
														<bool name="TextWrapped">true</bool>
														<token name="TextXAlignment">2</token>
														<token name="TextYAlignment">1</token>
														<bool name="Visible">true</bool>
														<int name="ZIndex">1</int>
													</Properties>
												</Item>
												<Item class="UIStroke" referent="RBX32B1A400EFC74A36A415F20E79EAB889">
													<Properties>
														<token name="ApplyStrokeMode">1</token>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
														<Color3 name="Color">
															<R>0.270588249</R>
															<G>0.274509817</G>
															<B>0.274509817</B>
														</Color3>
														<bool name="DefinesCapabilities">false</bool>
														<bool name="Enabled">true</bool>
														<token name="LineJoinMode">0</token>
														<string name="Name">UIStroke</string>
														<int64 name="SourceAssetId">-1</int64>
														<BinaryString name="Tags"></BinaryString>
														<float name="Thickness">1</float>
														<float name="Transparency">0</float>
													</Properties>
												</Item>
											</Item>
											<Item class="UIPadding" referent="RBX9C858EBA13434205A71D7F281EDA7C8B">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="DefinesCapabilities">false</bool>
													<string name="Name">UIPadding</string>
													<UDim name="PaddingBottom">
														<S>0</S>
														<O>0</O>
													</UDim>
													<UDim name="PaddingLeft">
														<S>0</S>
														<O>0</O>
													</UDim>
													<UDim name="PaddingRight">
														<S>0</S>
														<O>4</O>
													</UDim>
													<UDim name="PaddingTop">
														<S>0</S>
														<O>0</O>
													</UDim>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
								<Item class="TextLabel" referent="RBX51DA3A0214014F6585D5B30D7DEA9831">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxassetid://16658237174</url></Family>
											<Weight>700</Weight>
											<Style>Normal</Style>
										</Font>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">999999998</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<string name="Name">RewardsTitle</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0.0850000009</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">Rewards</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="UIPadding" referent="RBXEBFD142DC82F4B38A6755D16A041FB88">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<string name="Name">UIPadding</string>
											<UDim name="PaddingBottom">
												<S>0</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingLeft">
												<S>0</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingRight">
												<S>0</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingTop">
												<S>0.5</S>
												<O>0</O>
											</UDim>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXCDB46FD4728F4CDABA3DE2BA95F73584">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">2</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">true</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">999999999</int>
										<string name="Name">Rewards</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0.200000003</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">true</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="UIListLayout" referent="RBXD8574DCA522E40DFA2C6BED90D350FB1">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="FillDirection">0</token>
											<token name="HorizontalAlignment">1</token>
											<token name="HorizontalFlex">0</token>
											<token name="ItemLineAlignment">0</token>
											<string name="Name">UIListLayout</string>
											<UDim name="Padding">
												<S>0</S>
												<O>0</O>
											</UDim>
											<token name="SortOrder">2</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<token name="VerticalAlignment">1</token>
											<token name="VerticalFlex">0</token>
											<bool name="Wraps">true</bool>
										</Properties>
									</Item>
									<Item class="UIPadding" referent="RBXB8FFD23D448A43838CDF6E4F123C1542">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<string name="Name">UIPadding</string>
											<UDim name="PaddingBottom">
												<S>0</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingLeft">
												<S>0</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingRight">
												<S>0</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingTop">
												<S>0</S>
												<O>12</O>
											</UDim>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX431AC14032AC44488FA1C1675862EA74">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">Reward</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.189999998</XS>
												<XO>0</XO>
												<YS>0.189999998</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">1</token>
											<int64 name="SourceAssetId">-1</int64>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="ImageLabel" referent="RBX39BFA12BA0434A86965618A446A2DC8B">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0.5</X>
													<Y>0</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>rbxassetid://18400941726</url></Content>
												<Color3 name="ImageColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">ImageLabel</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0.5</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<token name="ResampleMode">0</token>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<token name="ScaleType">3</token>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>0.800000012</XS>
													<XO>0</XO>
													<YS>0.800000012</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<float name="SliceScale">1</float>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<UDim2 name="TileSize">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX34053ABAD7334D9CA501EB0A17D25FDD">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>1</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<Font name="FontFace">
													<Family><url>rbxassetid://16658237174</url></Family>
													<Weight>400</Weight>
													<Style>Normal</Style>
												</Font>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">0</int>
												<float name="LineHeight">1</float>
												<string name="LocalizationMatchIdentifier"></string>
												<string name="LocalizationMatchedSourceText"></string>
												<int name="MaxVisibleGraphemes">-1</int>
												<string name="Name">TextLabel</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<string name="OpenTypeFeatures"></string>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<bool name="RichText">false</bool>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.200000003</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<string name="Text">Shield Item</string>
												<Color3 name="TextColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<token name="TextDirection">0</token>
												<bool name="TextScaled">true</bool>
												<float name="TextSize">14</float>
												<Color3 name="TextStrokeColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<token name="TextTruncate">0</token>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="UIPadding" referent="RBX298122E7C715437DB1293F3B3CF3E728">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="DefinesCapabilities">false</bool>
												<string name="Name">UIPadding</string>
												<UDim name="PaddingBottom">
													<S>0.0500000007</S>
													<O>0</O>
												</UDim>
												<UDim name="PaddingLeft">
													<S>0.0500000007</S>
													<O>0</O>
												</UDim>
												<UDim name="PaddingRight">
													<S>0.0500000007</S>
													<O>0</O>
												</UDim>
												<UDim name="PaddingTop">
													<S>0.0500000007</S>
													<O>0</O>
												</UDim>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
											</Properties>
										</Item>
										<Item class="UIAspectRatioConstraint" referent="RBXCD1513AEFDE74FF2B1F2A36B64210892">
											<Properties>
												<float name="AspectRatio">1</float>
												<token name="AspectType">0</token>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="DefinesCapabilities">false</bool>
												<token name="DominantAxis">0</token>
												<string name="Name">UIAspectRatioConstraint</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="ScrollingFrame" referent="RBX5374B4AA5F424B77B64DF1CA24CAC933">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticCanvasSize">2</token>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
									<Vector2 name="CanvasPosition">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<UDim2 name="CanvasSize">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">true</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<token name="ElasticBehavior">0</token>
									<token name="HorizontalScrollBarInset">0</token>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
									<string name="Name">MissionList</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.100000001</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<Color3 name="ScrollBarImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="ScrollBarImageTransparency">0</float>
									<int name="ScrollBarThickness">4</int>
									<token name="ScrollingDirection">2</token>
									<bool name="ScrollingEnabled">true</bool>
									<bool name="Selectable">true</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">true</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.49000001</XS>
										<XO>0</XO>
										<YS>0.899999976</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
									<token name="VerticalScrollBarInset">1</token>
									<token name="VerticalScrollBarPosition">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UIListLayout" referent="RBXB4E5490BC8B5444281500A2D21B33C8F">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="FillDirection">1</token>
										<token name="HorizontalAlignment">1</token>
										<token name="HorizontalFlex">0</token>
										<token name="ItemLineAlignment">0</token>
										<string name="Name">UIListLayout</string>
										<UDim name="Padding">
											<S>0.0199999996</S>
											<O>0</O>
										</UDim>
										<token name="SortOrder">2</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<token name="VerticalAlignment">1</token>
										<token name="VerticalFlex">0</token>
										<bool name="Wraps">false</bool>
									</Properties>
								</Item>
								<Item class="ImageButton" referent="RBX3E83E7AA599D4381BFEEFBF0542E2B45">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>0.572549045</R>
											<G>0.572549045</G>
											<B>0.572549045</B>
										</Color3>
										<float name="BackgroundTransparency">0.939999998</float>
										<Color3 name="BorderColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<token name="BorderMode">1</token>
										<int name="BorderSizePixel">1</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Ref name="HoverHapticEffect">null</Ref>
										<Content name="HoverImage"><null></null></Content>
										<Content name="Image"><null></null></Content>
										<Color3 name="ImageColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<bool name="Modal">false</bool>
										<string name="Name">MissionEntry</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<Content name="PressedImage"><null></null></Content>
										<token name="ResampleMode">0</token>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0.200000003</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<float name="SliceScale">1</float>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags">VUlCdXR0b24=</BinaryString>
										<UDim2 name="TileSize">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX0D0CE147897D499F9E6E35FC4C3A714C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxassetid://16658237174</url></Family>
												<Weight>700</Weight>
												<Style>Normal</Style>
											</Font>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">NameLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.600000024</XS>
												<XO>0</XO>
												<YS>0.300000012</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">Mission Name</string>
											<Color3 name="TextColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXE752CACAA65C4E389616E98E673FF327">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>1</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">Status</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.379999995</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXD7691C20B6AC44C0AE0959FA24D11404">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>1</X>
													<Y>0.5</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<Font name="FontFace">
													<Family><url>rbxassetid://16658237174</url></Family>
													<Weight>400</Weight>
													<Style>Normal</Style>
												</Font>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">0</int>
												<float name="LineHeight">1</float>
												<string name="LocalizationMatchIdentifier"></string>
												<string name="LocalizationMatchedSourceText"></string>
												<int name="MaxVisibleGraphemes">-1</int>
												<string name="Name">ProgressLabel</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<string name="OpenTypeFeatures"></string>
												<UDim2 name="Position">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<bool name="RichText">false</bool>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.25</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<string name="Text">0/1 completed</string>
												<Color3 name="TextColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<token name="TextDirection">0</token>
												<bool name="TextScaled">true</bool>
												<float name="TextSize">14</float>
												<Color3 name="TextStrokeColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<token name="TextTruncate">0</token>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">1</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX6E752EF250B94B23A6776A410A6C174B">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>1</X>
													<Y>0.5</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<Font name="FontFace">
													<Family><url>rbxassetid://16658237174</url></Family>
													<Weight>400</Weight>
													<Style>Normal</Style>
												</Font>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">0</int>
												<float name="LineHeight">1</float>
												<string name="LocalizationMatchIdentifier"></string>
												<string name="LocalizationMatchedSourceText"></string>
												<int name="MaxVisibleGraphemes">-1</int>
												<string name="Name">InfoLabel</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<string name="OpenTypeFeatures"></string>
												<UDim2 name="Position">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<bool name="RichText">false</bool>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">1</float>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.25</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<string name="Text">Complete Mission 1</string>
												<Color3 name="TextColor3">
													<R>0.513725519</R>
													<G>0.529411793</G>
													<B>0.556862772</B>
												</Color3>
												<token name="TextDirection">0</token>
												<bool name="TextScaled">true</bool>
												<float name="TextSize">14</float>
												<Color3 name="TextStrokeColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<token name="TextTruncate">0</token>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">1</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">false</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXCE1ABE91BC1B4A068DCF1CDA50632176">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>1</X>
													<Y>0.5</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0.800000012</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">1</int>
												<string name="Name">TimeFrame</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.800000012</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.200000003</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="UICorner" referent="RBX3A08BC368768486FBB7F54C1587EB2C0">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<UDim name="CornerRadius">
														<S>0.5</S>
														<O>0</O>
													</UDim>
													<bool name="DefinesCapabilities">false</bool>
													<string name="Name">UICorner</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXB5AEDDA725634A92B4E641A9AA56A1A3">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>rbxassetid://18400123435</url></Content>
													<Color3 name="ImageColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<string name="Name">ImageLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<token name="ResampleMode">0</token>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">2</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<float name="SliceScale">1</float>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<UDim2 name="TileSize">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX33BDF6327E5A414C9123409C29D9ECDE">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<Font name="FontFace">
														<Family><url>rbxassetid://16658237174</url></Family>
														<Weight>400</Weight>
														<Style>Normal</Style>
													</Font>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<float name="LineHeight">1</float>
													<string name="LocalizationMatchIdentifier"></string>
													<string name="LocalizationMatchedSourceText"></string>
													<int name="MaxVisibleGraphemes">-1</int>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<string name="OpenTypeFeatures"></string>
													<UDim2 name="Position">
														<XS>0.200000003</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<bool name="RichText">false</bool>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>0.800000012</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<string name="Text">Ends in 20d 40h</string>
													<Color3 name="TextColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<token name="TextDirection">0</token>
													<bool name="TextScaled">true</bool>
													<float name="TextSize">14</float>
													<Color3 name="TextStrokeColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<token name="TextTruncate">0</token>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX43ECD114B5F84146A698858648BCA082">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>1</X>
													<Y>0.5</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">SingleTask</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0.400000006</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">false</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBX13FBE01605E64ED895A9414363D6A37E">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>1</X>
														<Y>0.5</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>0.36470589</R>
														<G>0.36470589</G>
														<B>0.36470589</B>
													</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<string name="Name">ProgressFrame</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0.850000024</YS>
														<YO>0</YO>
													</UDim2>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>0.5</XS>
														<XO>0</XO>
														<YS>0.100000001</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<int64 name="SourceAssetId">-1</int64>
													<token name="Style">0</token>
													<BinaryString name="Tags"></BinaryString>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
												<Item class="UICorner" referent="RBXCB84F10775A74D9FAD5A1084CD8D70C9">
													<Properties>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
														<UDim name="CornerRadius">
															<S>1</S>
															<O>0</O>
														</UDim>
														<bool name="DefinesCapabilities">false</bool>
														<string name="Name">UICorner</string>
														<int64 name="SourceAssetId">-1</int64>
														<BinaryString name="Tags"></BinaryString>
													</Properties>
												</Item>
												<Item class="Frame" referent="RBX0E1B970E164F4605889A9F20B541C225">
													<Properties>
														<bool name="Active">false</bool>
														<Vector2 name="AnchorPoint">
															<X>0</X>
															<Y>0</Y>
														</Vector2>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<bool name="AutoLocalize">true</bool>
														<token name="AutomaticSize">0</token>
														<Color3 name="BackgroundColor3">
															<R>1</R>
															<G>1</G>
															<B>1</B>
														</Color3>
														<float name="BackgroundTransparency">0</float>
														<Color3 name="BorderColor3">
															<R>0</R>
															<G>0</G>
															<B>0</B>
														</Color3>
														<token name="BorderMode">0</token>
														<int name="BorderSizePixel">0</int>
														<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
														<bool name="ClipsDescendants">false</bool>
														<bool name="DefinesCapabilities">false</bool>
														<bool name="Draggable">false</bool>
														<bool name="Interactable">true</bool>
														<int name="LayoutOrder">0</int>
														<string name="Name">Bar</string>
														<Ref name="NextSelectionDown">null</Ref>
														<Ref name="NextSelectionLeft">null</Ref>
														<Ref name="NextSelectionRight">null</Ref>
														<Ref name="NextSelectionUp">null</Ref>
														<UDim2 name="Position">
															<XS>0</XS>
															<XO>0</XO>
															<YS>0</YS>
															<YO>0</YO>
														</UDim2>
														<Ref name="RootLocalizationTable">null</Ref>
														<float name="Rotation">0</float>
														<bool name="Selectable">false</bool>
														<token name="SelectionBehaviorDown">0</token>
														<token name="SelectionBehaviorLeft">0</token>
														<token name="SelectionBehaviorRight">0</token>
														<token name="SelectionBehaviorUp">0</token>
														<bool name="SelectionGroup">false</bool>
														<Ref name="SelectionImageObject">null</Ref>
														<int name="SelectionOrder">0</int>
														<UDim2 name="Size">
															<XS>0.200000003</XS>
															<XO>0</XO>
															<YS>1</YS>
															<YO>0</YO>
														</UDim2>
														<token name="SizeConstraint">0</token>
														<int64 name="SourceAssetId">-1</int64>
														<token name="Style">0</token>
														<BinaryString name="Tags"></BinaryString>
														<bool name="Visible">true</bool>
														<int name="ZIndex">1</int>
													</Properties>
													<Item class="UICorner" referent="RBX272E50CCE70645AF8B897CC8F2CFB301">
														<Properties>
															<BinaryString name="AttributesSerialize"></BinaryString>
															<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
															<UDim name="CornerRadius">
																<S>1</S>
																<O>0</O>
															</UDim>
															<bool name="DefinesCapabilities">false</bool>
															<string name="Name">UICorner</string>
															<int64 name="SourceAssetId">-1</int64>
															<BinaryString name="Tags"></BinaryString>
														</Properties>
													</Item>
												</Item>
											</Item>
											<Item class="TextLabel" referent="RBX1DF3667312294FA1AED9EDB3EBBF15E9">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0.5</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<Font name="FontFace">
														<Family><url>rbxassetid://16658237174</url></Family>
														<Weight>400</Weight>
														<Style>Normal</Style>
													</Font>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<float name="LineHeight">1</float>
													<string name="LocalizationMatchIdentifier"></string>
													<string name="LocalizationMatchedSourceText"></string>
													<int name="MaxVisibleGraphemes">-1</int>
													<string name="Name">ProgressLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<string name="OpenTypeFeatures"></string>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0.5</YS>
														<YO>0</YO>
													</UDim2>
													<bool name="RichText">false</bool>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0.5</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<string name="Text">1000/5000</string>
													<Color3 name="TextColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<token name="TextDirection">0</token>
													<bool name="TextScaled">true</bool>
													<float name="TextSize">14</float>
													<Color3 name="TextStrokeColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<token name="TextTruncate">0</token>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">1</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="UIListLayout" referent="RBX347BD05D406E4206A4573E96A9ED7EB3">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="DefinesCapabilities">false</bool>
												<token name="FillDirection">1</token>
												<token name="HorizontalAlignment">2</token>
												<token name="HorizontalFlex">0</token>
												<token name="ItemLineAlignment">0</token>
												<string name="Name">UIListLayout</string>
												<UDim name="Padding">
													<S>0.100000001</S>
													<O>0</O>
												</UDim>
												<token name="SortOrder">2</token>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<token name="VerticalAlignment">0</token>
												<token name="VerticalFlex">0</token>
												<bool name="Wraps">false</bool>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBXD768588084BB4B708498FB66666F1AEB">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>1</X>
													<Y>0.5</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<bool name="AutoButtonColor">true</bool>
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">0</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<Font name="FontFace">
													<Family><url>rbxassetid://16658237174</url></Family>
													<Weight>700</Weight>
													<Style>Normal</Style>
												</Font>
												<Ref name="HoverHapticEffect">null</Ref>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">0</int>
												<float name="LineHeight">1</float>
												<string name="LocalizationMatchIdentifier"></string>
												<string name="LocalizationMatchedSourceText"></string>
												<int name="MaxVisibleGraphemes">-1</int>
												<bool name="Modal">false</bool>
												<string name="Name">ClaimButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<string name="OpenTypeFeatures"></string>
												<UDim2 name="Position">
													<XS>0.99000001</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="PressHapticEffect">null</Ref>
												<bool name="RichText">false</bool>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>0.75</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<string name="Text"></string>
												<Color3 name="TextColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<token name="TextDirection">0</token>
												<bool name="TextScaled">true</bool>
												<float name="TextSize">14</float>
												<Color3 name="TextStrokeColor3">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<token name="TextTruncate">0</token>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextLabel" referent="RBX7AADC916BD26462595B598DF8DE7414F">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0.5</X>
														<Y>0.5</Y>
													</Vector2>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<bool name="AutoLocalize">true</bool>
													<token name="AutomaticSize">0</token>
													<Color3 name="BackgroundColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<token name="BorderMode">0</token>
													<int name="BorderSizePixel">0</int>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<bool name="ClipsDescendants">false</bool>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Draggable">false</bool>
													<Font name="FontFace">
														<Family><url>rbxassetid://16658237174</url></Family>
														<Weight>700</Weight>
														<Style>Normal</Style>
													</Font>
													<bool name="Interactable">true</bool>
													<int name="LayoutOrder">0</int>
													<float name="LineHeight">1</float>
													<string name="LocalizationMatchIdentifier"></string>
													<string name="LocalizationMatchedSourceText"></string>
													<int name="MaxVisibleGraphemes">-1</int>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<string name="OpenTypeFeatures"></string>
													<UDim2 name="Position">
														<XS>0.5</XS>
														<XO>0</XO>
														<YS>0.5</YS>
														<YO>0</YO>
													</UDim2>
													<bool name="RichText">false</bool>
													<Ref name="RootLocalizationTable">null</Ref>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<token name="SelectionBehaviorDown">0</token>
													<token name="SelectionBehaviorLeft">0</token>
													<token name="SelectionBehaviorRight">0</token>
													<token name="SelectionBehaviorUp">0</token>
													<bool name="SelectionGroup">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<int name="SelectionOrder">0</int>
													<UDim2 name="Size">
														<XS>0.850000024</XS>
														<XO>0</XO>
														<YS>0.75</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<string name="Text">Claim Reward</string>
													<Color3 name="TextColor3">
														<R>1</R>
														<G>1</G>
														<B>1</B>
													</Color3>
													<token name="TextDirection">0</token>
													<bool name="TextScaled">true</bool>
													<float name="TextSize">14</float>
													<Color3 name="TextStrokeColor3">
														<R>0</R>
														<G>0</G>
														<B>0</B>
													</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<token name="TextTruncate">0</token>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="UIGradient" referent="RBXFC70B8492554401191D2D09CBD9CD39C">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<ColorSequence name="Color">0 1 1 1 0 0.01 1 1 1 0 0.011 0.137255 0.694118 1 0 1 0.137255 0.694118 1 0 </ColorSequence>
													<bool name="DefinesCapabilities">false</bool>
													<bool name="Enabled">true</bool>
													<string name="Name">UIGradient</string>
													<Vector2 name="Offset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="Rotation">90</float>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
												</Properties>
											</Item>
											<Item class="UICorner" referent="RBX13368672F38545B69597F7E044CB4F57">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
													<UDim name="CornerRadius">
														<S>0</S>
														<O>2</O>
													</UDim>
													<bool name="DefinesCapabilities">false</bool>
													<string name="Name">UICorner</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="UIGradient" referent="RBXE4AB717B634D4CE8A0BBB2162E76F6D5">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<ColorSequence name="Color">0 0.752941 0.796078 1 0 0.06 0.752941 0.792157 1 0 1 0.768627 0.901961 1 0 </ColorSequence>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Enabled">true</bool>
											<string name="Name">UIGradient</string>
											<Vector2 name="Offset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="Rotation">0</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<NumberSequence name="Transparency">0 0.07 0 1 0.07 0 </NumberSequence>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX1A543B4D8A0246C8B7DE67CAE8EE7B37">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0.5</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">SelectedFrame</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.5</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1.10000002</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="UIStroke" referent="RBXCFEF1FA913F042469DC2C8CB35C6DF61">
											<Properties>
												<token name="ApplyStrokeMode">1</token>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<Color3 name="Color">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Enabled">true</bool>
												<token name="LineJoinMode">0</token>
												<string name="Name">UIStroke</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Thickness">1.5</float>
												<float name="Transparency">0</float>
											</Properties>
										</Item>
									</Item>
									<Item class="UIPadding" referent="RBX924BEE2AF72A409594F3A2FEE119D81A">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<string name="Name">UIPadding</string>
											<UDim name="PaddingBottom">
												<S>0.0500000007</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingLeft">
												<S>0.0500000007</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingRight">
												<S>0.0500000007</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingTop">
												<S>0.0500000007</S>
												<O>0</O>
											</UDim>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="ScrollingFrame" referent="RBX252A0C679EF1422D865EF718A3E7CAF0">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticCanvasSize">1</token>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
									<Vector2 name="CanvasPosition">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<UDim2 name="CanvasSize">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">true</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<token name="ElasticBehavior">0</token>
									<token name="HorizontalScrollBarInset">0</token>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
									<string name="Name">CategoryFrame</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<Color3 name="ScrollBarImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="ScrollBarImageTransparency">0</float>
									<int name="ScrollBarThickness">4</int>
									<token name="ScrollingDirection">1</token>
									<bool name="ScrollingEnabled">true</bool>
									<bool name="Selectable">true</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">true</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.49000001</XS>
										<XO>0</XO>
										<YS>0.100000001</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
									<token name="VerticalScrollBarInset">0</token>
									<token name="VerticalScrollBarPosition">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UIListLayout" referent="RBX50203ECEB2A1414880C2B6125975209A">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="FillDirection">0</token>
										<token name="HorizontalAlignment">1</token>
										<token name="HorizontalFlex">0</token>
										<token name="ItemLineAlignment">0</token>
										<string name="Name">UIListLayout</string>
										<UDim name="Padding">
											<S>0</S>
											<O>12</O>
										</UDim>
										<token name="SortOrder">2</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<token name="VerticalAlignment">0</token>
										<token name="VerticalFlex">0</token>
										<bool name="Wraps">false</bool>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX63B0BF2F2104404FABE9C0A8F7615217">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">1</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxassetid://16658237174</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
										</Font>
										<Ref name="HoverHapticEffect">null</Ref>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<bool name="Modal">false</bool>
										<string name="Name">CategoryButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>0.25</XS>
											<XO>0</XO>
											<YS>0.699999988</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags">VUlCdXR0b24AVUlIb3Zlcg==</BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0.25</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX6A51D615C20747CCAE2E2A8041298177">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">1</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxassetid://16658237174</url></Family>
												<Weight>400</Weight>
												<Style>Normal</Style>
											</Font>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">3</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">ResetTimer</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0.600000024</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0.600000024</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">Ends in 2h 45m</string>
											<Color3 name="TextColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX206BE1E6FEE54B2DAA94D5EB3D7FA7C5">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">1</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxassetid://16658237174</url></Family>
												<Weight>400</Weight>
												<Style>Normal</Style>
											</Font>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">1</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">CategoryLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0.600000024</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">General</string>
											<Color3 name="TextColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="UIListLayout" referent="RBX25E002BDDC1E47C0AB85C9E15D224903">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="FillDirection">0</token>
											<token name="HorizontalAlignment">0</token>
											<token name="HorizontalFlex">0</token>
											<token name="ItemLineAlignment">0</token>
											<string name="Name">UIListLayout</string>
											<UDim name="Padding">
												<S>0.0299999993</S>
												<O>0</O>
											</UDim>
											<token name="SortOrder">2</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<token name="VerticalAlignment">0</token>
											<token name="VerticalFlex">0</token>
											<bool name="Wraps">false</bool>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX77EB9A1706414B34A02D385269B3B852">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">2</int>
											<string name="Name">Circle</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.100000001</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.0500000007</XS>
												<XO>0</XO>
												<YS>0.0500000007</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="UIAspectRatioConstraint" referent="RBXC1607515CABD40C7B5DAB46E8FA2A118">
											<Properties>
												<float name="AspectRatio">1</float>
												<token name="AspectType">0</token>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="DefinesCapabilities">false</bool>
												<token name="DominantAxis">0</token>
												<string name="Name">UIAspectRatioConstraint</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
											</Properties>
										</Item>
										<Item class="UICorner" referent="RBX87A0914E104C490CB25C47A7759781AD">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<UDim name="CornerRadius">
													<S>1</S>
													<O>0</O>
												</UDim>
												<bool name="DefinesCapabilities">false</bool>
												<string name="Name">UICorner</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
											</Properties>
										</Item>
									</Item>
									<Item class="UICorner" referent="RBXB5D89185D1CC4C40BE8037FC076A3ED5">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<UDim name="CornerRadius">
												<S>0.100000001</S>
												<O>0</O>
											</UDim>
											<bool name="DefinesCapabilities">false</bool>
											<string name="Name">UICorner</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
										</Properties>
									</Item>
									<Item class="UIPadding" referent="RBXF7CD236955DF415D90AF84D2D7CA9FCB">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<string name="Name">UIPadding</string>
											<UDim name="PaddingBottom">
												<S>0.0500000007</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingLeft">
												<S>0.100000001</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingRight">
												<S>0.100000001</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingTop">
												<S>0.0500000007</S>
												<O>0</O>
											</UDim>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
										</Properties>
									</Item>
								</Item>
								<Item class="UIPadding" referent="RBXD200222D591F49A9B3113996D7B6C50B">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<string name="Name">UIPadding</string>
										<UDim name="PaddingBottom">
											<S>0</S>
											<O>0</O>
										</UDim>
										<UDim name="PaddingLeft">
											<S>0.0299999993</S>
											<O>0</O>
										</UDim>
										<UDim name="PaddingRight">
											<S>0.00999999978</S>
											<O>0</O>
										</UDim>
										<UDim name="PaddingTop">
											<S>0.0500000007</S>
											<O>0</O>
										</UDim>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="UIPadding" referent="RBXAA054FCE14EB495697E399F1C4775425">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UIPadding</string>
									<UDim name="PaddingBottom">
										<S>0</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingLeft">
										<S>0.0299999993</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingRight">
										<S>0.0299999993</S>
										<O>0</O>
									</UDim>
									<UDim name="PaddingTop">
										<S>0.0500000007</S>
										<O>0</O>
									</UDim>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBXA2CB973337174E428245476058A82D2F">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0.949999988</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Header</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0.140000001</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">100</int>
						</Properties>
						<Item class="UIPadding" referent="RBX9EFAD93E870E4B61949125807F029B66">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UIPadding</string>
								<UDim name="PaddingBottom">
									<S>0.00999999978</S>
									<O>0</O>
								</UDim>
								<UDim name="PaddingLeft">
									<S>0.00999999978</S>
									<O>0</O>
								</UDim>
								<UDim name="PaddingRight">
									<S>0.00999999978</S>
									<O>0</O>
								</UDim>
								<UDim name="PaddingTop">
									<S>0.00999999978</S>
									<O>0</O>
								</UDim>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBXC22B5507EC7544EA9CBA233B47EDDB40">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>1</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">CloseButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0.800000012</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">200</int>
							</Properties>
							<Item class="ImageButton" referent="RBXFB48E768C57948F3B57AEDF8A669375F">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoButtonColor">true</bool>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Ref name="HoverHapticEffect">null</Ref>
									<Content name="HoverImage"><null></null></Content>
									<Content name="Image"><null></null></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">2</int>
									<bool name="Modal">false</bool>
									<string name="Name">Button</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="PressHapticEffect">null</Ref>
									<Content name="PressedImage"><null></null></Content>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>45</X>
											<Y>15</Y>
										</min>
										<max>
											<X>180</X>
											<Y>85</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">VUlCdXR0b24AVUlIb3Zlcg==</BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="ImageLabel" referent="RBX56B8FA4D68954734A5485FEE0797F951">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>rbxassetid://17210628183</url></Content>
										<Color3 name="ImageColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">ImageLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<token name="ResampleMode">0</token>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<token name="ScaleType">3</token>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>0.300000012</XS>
											<XO>0</XO>
											<YS>0.300000012</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<float name="SliceScale">1</float>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UDim2 name="TileSize">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="UICorner" referent="RBX3CC23381C2CC4C2186A9DE5BB9B06757">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<UDim name="CornerRadius">
											<S>1</S>
											<O>0</O>
										</UDim>
										<bool name="DefinesCapabilities">false</bool>
										<string name="Name">UICorner</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="UIAspectRatioConstraint" referent="RBXBE7847ADE3084CB49DA7910775BA6E57">
								<Properties>
									<float name="AspectRatio">1</float>
									<token name="AspectType">0</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="DominantAxis">0</token>
									<string name="Name">UIAspectRatioConstraint</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXCAB6B51133DF41A28002BD0AFD6CD84D">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Tabs</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0.280000001</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX1ADC5BD196284BE6B32A227E9B1FA752">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">1</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">MissionButtonFrame</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBXCADEF7261FB540019A01C11D883B862E">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">1</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxassetid://16658237174</url></Family>
											<Weight>700</Weight>
											<Style>Normal</Style>
										</Font>
										<Ref name="HoverHapticEffect">null</Ref>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">1</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<bool name="Modal">false</bool>
										<string name="Name">MissionButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags">VUlIb3Zlcg==</BinaryString>
										<string name="Text">Missions</string>
										<Color3 name="TextColor3">
											<R>0.992156923</R>
											<G>0.992156923</G>
											<B>0.992156923</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="UICorner" referent="RBX54D76A5B7C164E6BAA02BEE808B97F80">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<UDim name="CornerRadius">
												<S>0.100000001</S>
												<O>0</O>
											</UDim>
											<bool name="DefinesCapabilities">false</bool>
											<string name="Name">UICorner</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
										</Properties>
									</Item>
									<Item class="UIPadding" referent="RBX23BEDF537CC748C3B38588BCBA182C70">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<string name="Name">UIPadding</string>
											<UDim name="PaddingBottom">
												<S>0.0500000007</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingLeft">
												<S>0.100000001</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingRight">
												<S>0.100000001</S>
												<O>0</O>
											</UDim>
											<UDim name="PaddingTop">
												<S>0.0500000007</S>
												<O>0</O>
											</UDim>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
										</Properties>
									</Item>
								</Item>
								<Item class="UIListLayout" referent="RBX145A0771BFBA46A4878FABB529298084">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="FillDirection">0</token>
										<token name="HorizontalAlignment">1</token>
										<token name="HorizontalFlex">0</token>
										<token name="ItemLineAlignment">0</token>
										<string name="Name">UIListLayout</string>
										<UDim name="Padding">
											<S>0.100000001</S>
											<O>0</O>
										</UDim>
										<token name="SortOrder">2</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<token name="VerticalAlignment">0</token>
										<token name="VerticalFlex">0</token>
										<bool name="Wraps">false</bool>
									</Properties>
								</Item>
							</Item>
							<Item class="UIListLayout" referent="RBXFF0C78B673F744CD9DF6D12BE0AB9EAB">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="FillDirection">0</token>
									<token name="HorizontalAlignment">0</token>
									<token name="HorizontalFlex">0</token>
									<token name="ItemLineAlignment">0</token>
									<string name="Name">UIListLayout</string>
									<UDim name="Padding">
										<S>0.0500000007</S>
										<O>0</O>
									</UDim>
									<token name="SortOrder">2</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<token name="VerticalAlignment">1</token>
									<token name="VerticalFlex">0</token>
									<bool name="Wraps">false</bool>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="TextButton" referent="RBXBB117A5F67074BA6866A55DD34141802">
				<Properties>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoButtonColor">true</bool>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<Font name="FontFace">
						<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
						<Weight>400</Weight>
						<Style>Normal</Style>
						<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
					</Font>
					<Ref name="HoverHapticEffect">null</Ref>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">1</int>
					<float name="LineHeight">1</float>
					<string name="LocalizationMatchIdentifier"></string>
					<string name="LocalizationMatchedSourceText"></string>
					<int name="MaxVisibleGraphemes">-1</int>
					<bool name="Modal">false</bool>
					<string name="Name">MissionsHudButton</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<string name="OpenTypeFeatures"></string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="PressHapticEffect">null</Ref>
					<bool name="RichText">false</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">true</bool>
					<bool name="Selected">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<string name="Text"></string>
					<Color3 name="TextColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="TextDirection">0</token>
					<bool name="TextScaled">false</bool>
					<float name="TextSize">14</float>
					<Color3 name="TextStrokeColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<float name="TextStrokeTransparency">1</float>
					<float name="TextTransparency">0</float>
					<token name="TextTruncate">0</token>
					<bool name="TextWrapped">false</bool>
					<token name="TextXAlignment">2</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">2</int>
				</Properties>
				<Item class="UIPadding" referent="RBX171F159F123243C7985DC8B07B4C1940">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">UIPadding</string>
						<UDim name="PaddingBottom">
							<S>0</S>
							<O>0</O>
						</UDim>
						<UDim name="PaddingLeft">
							<S>0</S>
							<O>0</O>
						</UDim>
						<UDim name="PaddingRight">
							<S>0</S>
							<O>0</O>
						</UDim>
						<UDim name="PaddingTop">
							<S>0</S>
							<O>0</O>
						</UDim>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="UIAspectRatioConstraint" referent="RBX0E1671A6AB534471A507CEBF2F229F9C">
					<Properties>
						<float name="AspectRatio">1</float>
						<token name="AspectType">0</token>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<token name="DominantAxis">0</token>
						<string name="Name">UIAspectRatioConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX95778B5D88EC43409043FAE377A9245A">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="BackgroundTransparency">0.300000012</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Background</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">3</int>
					</Properties>
					<Item class="UICorner" referent="RBX13D27A514EE84AD0B5D81912956AF416">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0.5</S>
								<O>0</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX62946232B5E54ECA8113BFD7417AEF40">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxassetid://16658237174</url></Family>
							<Weight>600</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">1</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">PrimaryText</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.75</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0.25</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Missions</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">2</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">7</int>
					</Properties>
					<Item class="UIStroke" referent="RBX8F510F90CE1F4908A17AAAEE8EAB49B6">
						<Properties>
							<token name="ApplyStrokeMode">0</token>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<token name="LineJoinMode">0</token>
							<string name="Name">UIStroke</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Thickness">2</float>
							<float name="Transparency">0</float>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX932C495191374A80AD0E64546522DBE6">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxassetid://16658237174</url></Family>
							<Weight>600</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">1</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">SecondaryText</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0.25</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text"></string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">7</int>
					</Properties>
					<Item class="UIStroke" referent="RBX3609065FC46440459F09DFA5C1A74FD7">
						<Properties>
							<token name="ApplyStrokeMode">0</token>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<token name="LineJoinMode">0</token>
							<string name="Name">UIStroke</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Thickness">2</float>
							<float name="Transparency">0</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX0ED991EE07CD4A31921FC09B2571C9B6">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">CallToAction</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX89DF4727CA8E48CDAFDC603AAA01E3EB">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://17210362160</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.5</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Glow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1.60000002</XS>
								<XO>0</XO>
								<YS>1.60000002</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags">VUlHbG93</BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">false</bool>
							<int name="ZIndex">4</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX8402394C750A4A839D7D33144D4147A7">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.41568628</R>
								<G>0.694117665</G>
								<B>0.894117653</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://130501942638986</url></Content>
							<Color3 name="ImageColor3">
								<R>0.129411772</R>
								<G>0.627451003</G>
								<B>0.90196079</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Dot</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.707000017</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.200000003</XS>
								<XO>0</XO>
								<YS>0.200000003</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">7</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX77564D678C094512B89900A30ABB84B2">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">IconFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">5</int>
					</Properties>
					<Item class="ImageLabel" referent="RBXCB78643C8CBA4572AF2B3D04908C5B88">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://77932533979407</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Icon</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">5</int>
						</Properties>
						<Item class="UIAspectRatioConstraint" referent="RBXFC21378C5D2B495DBC4AB24E098BD04A">
							<Properties>
								<float name="AspectRatio">1</float>
								<token name="AspectType">0</token>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="DominantAxis">0</token>
								<string name="Name">UIAspectRatioConstraint</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="UIPadding" referent="RBX602D4AA7A251483A9B466B093B3F21BA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UIPadding</string>
							<UDim name="PaddingBottom">
								<S>0.200000003</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingLeft">
								<S>0.200000003</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingRight">
								<S>0.200000003</S>
								<O>0</O>
							</UDim>
							<UDim name="PaddingTop">
								<S>0.200000003</S>
								<O>0</O>
							</UDim>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX05A54BBE837440299ED37A07981C44AF">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipToDeviceSafeArea">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<string name="Name">MissionsGui</string>
					<bool name="ResetOnSpawn">false</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SafeAreaCompatibility">1</token>
					<token name="ScreenInsets">2</token>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<token name="ZIndexBehavior">1</token>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX58F9DC14A7244579B4AD10FF46604C61">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Server</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBXD91F29167166419E88EEF9C692641DE4">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Missions</string>
					<string name="ScriptGuid">{c0908582-dedf-4ff6-bc71-eb2beb221bb4}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

--[[
	This ModuleScript manages the server side portion of Missions.

	Handles granting of new missions when their conditions are met,
	as well as tracking progress for all tasks on all players.
	Also sends events to the clients when their missions update,
	and handles the client requesting to claim missions.
--]]

local ReplicatedStorage = game:GetService("ReplicatedStorage").Shared

-- Protect the run context, this ModuleScript is only intended to run on the server
require(ReplicatedStorage.FeaturePackagesCore.Modules.ProtectRunContext).server()

-- Analytics
local MissionsAnalytics = require(script.MissionsAnalytics)

local Players = game:GetService("Players")

-- Mission DataStore
local MissionStore = require(script.MissionStore)

local MissionsConfig = require(ReplicatedStorage.Missions.Configs.Missions)
local Categories = require(ReplicatedStorage.Missions.Configs.Categories)
local Types = require(ReplicatedStorage.Missions.Configs.Types)
local TimerSystem = require(ReplicatedStorage.FeaturePackagesCore.Modules.TimerSystem)
local CounterSystem = require(ReplicatedStorage.FeaturePackagesCore.Server.DataStore.CounterSystem)
local getInstance = require(ReplicatedStorage.FeaturePackagesCore.Utils.getInstance)
local MissionsAnalytics = require(ReplicatedStorage.Missions.Server.Missions.MissionsAnalytics)

local missionUpdatedRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "MissionUpdatedRemoteEvent")
local taskUpdatedRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "TaskUpdatedRemoteEvent")
local categoryTimerUpdatedRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "CategoryTimerUpdatedRemoteEvent")
local claimMissionRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "ClaimMissionRemoteEvent")
local requestMissionUpdateEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "RequestMissionUpdateRemoteEvent")
local callToActionRemoteFunction: RemoteFunction =
	getInstance(ReplicatedStorage, "Missions", "Functions", "CallToActionRemoteFunction")
local getMissionDataBindableFunction: BindableFunction =
	getInstance(ReplicatedStorage, "Missions", "Functions", "GetMissionDataBindableFunction")
local getMissionDataRemoteFunction: RemoteFunction =
	getInstance(ReplicatedStorage, "Missions", "Functions", "GetMissionDataRemoteFunction")

local completionHandlers = {} :: { [Types.MissionId]: MissionHandlerFunction? }
local unlockHandlers = {} :: { [Types.MissionId]: MissionHandlerFunction? }
local failureHandlers = {} :: { [Types.MissionId]: MissionHandlerFunction? }

local Missions = {
	Missions = MissionsConfig,
}

local CATEGORY_COUNTER_PREFIX = "Missions_Category"

type MissionHandlerFunction = (player: Player, missionId: Types.MissionId) -> ()

type UserId = number

-- Set the handler to be called when a certain mission is completed.
function Missions.setCompletionHandler(missionId: Types.MissionId, handler: MissionHandlerFunction)
	completionHandlers[missionId] = handler
end

-- Set the handler to be called when a certain mission is unlocked.
function Missions.setUnlockHandler(missionId: Types.MissionId, handler: MissionHandlerFunction)
	unlockHandlers[missionId] = handler
end

-- Set the handler to be called when a certain mission is failed.
function Missions.setFailureHandler(missionId: Types.MissionId, handler: MissionHandlerFunction)
	failureHandlers[missionId] = handler
end

local function getMissionData(player: Player, missionId: Types.MissionId): Types.MissionData?
	local data = MissionStore.getAsync(player)
	if data then
		return data[missionId]
	end
	return nil
end

local function prerequisitesCompleted(player: Player, missionId: Types.MissionId): boolean
	local mission = MissionsConfig[missionId]
	-- check if mission exists
	if not mission then
		return false
	end

	local prerequisites = mission.prerequisites
	-- check if mission has prerequisites
	if not prerequisites then
		return true
	end
	for index, prerequisite in prerequisites do
		local missionData = getMissionData(player, prerequisite)
		-- mission data for parent mission exists
		if not missionData then
			return false
		end
		if not missionData.completedBefore then
			return false -- mission data indicates parent was not completed by player
		end
	end
	return true
end

local function fireMissionUpdatedEvent(player: Player, missionId: Types.MissionId)
	local data = getMissionData(player, missionId)
	if not data then
		return
	end

	missionUpdatedRemoteEvent:FireClient(
		player,
		missionId,
		data.completed,
		data.failed,
		data.startedAtUtc,
		data.expirationTimer
	)
end

local function fireTaskUpdatedEvent(player: Player, missionId: Types.MissionId, taskId: Types.TaskId)
	local data = getMissionData(player, missionId)
	if not data then
		return
	end

	taskUpdatedRemoteEvent:FireClient(player, missionId, taskId, data.taskProgress[taskId], data.taskTimers[taskId])
end

local function fireCategoryTimerUpdatedEvent(player: Player, categoryId: Types.CategoryId)
	local category = Categories[categoryId]
	if not category or not category.repeatDelaySeconds then
		return
	end

	local counterId = `{CATEGORY_COUNTER_PREFIX}_{categoryId}`

	local elapsedSeconds = CounterSystem.getElapsedSeconds(player, counterId)

	local timer = TimerSystem.new(category.repeatDelaySeconds, true)

	TimerSystem.setElapsedSeconds(timer, elapsedSeconds)

	categoryTimerUpdatedRemoteEvent:FireClient(player, categoryId, timer)
end

local function updateCategoryCounters(player: Player)
	for categoryId, category in Categories do
		if not category then
			continue
		end

		if not category.repeatDelaySeconds then
			continue
		end

		local counterId = `{CATEGORY_COUNTER_PREFIX}_{categoryId}`

		-- Category timer should just always be running.
		CounterSystem.startTimer(player, counterId)

		if CounterSystem.getElapsedSeconds(player, counterId) >= category.repeatDelaySeconds then
			CounterSystem.setElapsedSeconds(player, counterId, 0)
			for missionId, mission in MissionsConfig do
				if not mission then
					continue
				end
				if mission.categoryId ~= categoryId then
					continue
				end

				local missionsData = MissionStore.getAsync(player)
				if not missionsData then
					continue
				end

				missionsData[missionId] = nil
			end

			Missions.getActiveMissionIds(player)
		end

		local duration = category.repeatDelaySeconds - CounterSystem.getElapsedSeconds(player, counterId)

		local refreshTimer = TimerSystem.new(duration, true)

		local playerId = player.UserId

		TimerSystem.setCompletionHandler(refreshTimer, function()
			local playerOnlineCheck = Players:GetPlayerByUserId(playerId)

			if playerOnlineCheck then
				updateCategoryCounters(playerOnlineCheck)
			end
		end)

		fireCategoryTimerUpdatedEvent(player, categoryId)
	end
end

local trackedCounters: { [CounterSystem.CounterId]: { Player }? } = {}

-- Counter change callback to check if any tasks need to be updated.
local function counterChanged(player: Player, counterId: CounterSystem.CounterId, delta: number?)
	local active = Missions.getActiveMissionIds(player)
	for _, missionId in active do
		local mission = MissionsConfig[missionId]
		if not mission then
			continue
		end

		-- Find any tasks related to this counter.
		for taskId, task in mission.tasks do
			if not task then
				continue
			end

			if not task.counter or task.counter.counterId ~= counterId then
				continue
			end

			if task.taskType == Types.TaskType.Count then
				if task.counter and task.counter.continueFromCounter then
					-- Task directly tracks counter, set it.
					local counterValue = CounterSystem.getCounter(player, counterId)
					Missions.setTaskProgress(player, missionId, taskId, counterValue)
				elseif delta then
					-- Task is tracking separately, use the delta.
					Missions.addProgressToTask(player, missionId, taskId, delta)
				end
			elseif task.taskType == Types.TaskType.Time then
				-- Start or stop the timed task as appropriate.
				if CounterSystem.isTimerRunning(player, counterId) then
					Missions.startTimedTask(player, missionId, taskId)
				else
					Missions.stopTimedTask(player, missionId, taskId)
				end
			end
		end
	end
end

-- Start tracking changes to a counter if it isn't already being tracked.
local function trackCounter(playerToTrack: Player, counterId: CounterSystem.CounterId)
	local players = (trackedCounters[counterId] or {}) :: { Player }
	if not trackedCounters[counterId] then
		trackedCounters[counterId] = players
	end

	local counterUntracked = #players == 0

	-- Add the player to the list. If they are already there, add them again.
	-- The player will then be in the list once for each task they have.
	table.insert(players, playerToTrack)

	-- Start tracking the changes if no players were in the list.
	if counterUntracked then
		CounterSystem.addChangedHandler(counterId, counterChanged)
	end
end

-- Stop tracking changes to a counter if there are no other players tracking it.
local function untrackCounter(playerToTrack: Player, counterId: CounterSystem.CounterId)
	local players = (trackedCounters[counterId] or {}) :: { Player }
	if not trackedCounters[counterId] then
		trackedCounters[counterId] = players
	end

	-- Check if the player is in the tracked list.
	for index, player in players do
		if player == playerToTrack then
			-- Remove exactly one instance of the player from the tracked list.
			-- If they have multiple tracked tasks they will be in the list once for each task.
			table.remove(players, index)
			break
		end
	end

	-- If there are no players left in the list, stop tracking this counter.
	if #players == 0 then
		CounterSystem.removeChangedHandler(counterId, counterChanged)
	end
end

-- Check if a player has a given mission in progress.
function Missions.isMissionInProgress(player: Player, missionId: Types.MissionId): boolean
	local mission = MissionsConfig[missionId]
	if not mission then
		return false
	end

	local data = getMissionData(player, missionId)
	if data then
		return not (data.completed or data.failed)
	end
	return false
end

-- Check all the tasks of a mission, as well as expiration.
local function updateMissionCompletion(player: Player, missionId: Types.MissionId)
	local data = getMissionData(player, missionId)
	if not data then
		return
	end

	local mission = MissionsConfig[missionId]
	if not mission then
		return
	end

	if data.failed or data.completed then
		return -- mission is not currently active, just a record of it
	end

	local failed = false

	-- Check if mission has been active for too long and expired.
	if mission.expireSeconds then
		if TimerSystem.isFinished(data.expirationTimer) then
			failed = true

			-- Log the expiration in analytics funnel
			MissionsAnalytics:logFunnelStep(player, missionId, "MissionExpired")
		end
	end

	-- Check if mission is outside its availability window.
	if not failed and mission.availableBeforeUtc then
		local outsideAvailability = mission.availableBeforeUtc.UnixTimestamp - DateTime.now().UnixTimestamp < 0
		if outsideAvailability then
			failed = true
		end
	end

	-- mission failed, update data and call handler
	if failed then
		data.failed = true
		for taskId, task in mission.tasks do
			TimerSystem.stop(data.taskTimers[taskId])

			if task and task.counter then
				untrackCounter(player, task.counter.counterId)
			end
		end
		data.timesEnded = (data.timesEnded or 0) + 1

		local handler = failureHandlers[missionId]
		if handler then
			handler(player, missionId)
		end

		fireMissionUpdatedEvent(player, missionId)
	end
end

-- Check if a mission can be unlocked for a player.
-- Automatic is for missions unlocked by Missions itself, versus by a function call from the experience.
local function canPlayerUnlock(player: Player, missionId: Types.MissionId, automatic: boolean): boolean
	local mission = MissionsConfig[missionId]
	if not mission then
		return false
	end

	-- Check if the mission is part of a season and has a premium track requirement.
	if mission.requiredTrackName then
		local SeasonPasses = require(ReplicatedStorage.SeasonPasses.Server.SeasonPasses)
		local hasPass = SeasonPasses.isPremiumTrackUnlocked(player)
		if not hasPass then
			return false -- mission requires premium track, but player doesn't have it
		end
	end

	if mission.manualOnly and automatic then
		return false -- mission is being unlocked by Missions automatically, but is manual only.
	end

	if mission.availableAfterUtc or mission.availableBeforeUtc then
		-- There is a timeframe on the mission
		local now = DateTime.now()
		if mission.availableAfterUtc then
			if os.difftime(now.UnixTimestamp, mission.availableAfterUtc.UnixTimestamp) < 0 then
				return false -- mission is only available after now
			end
		end
		if mission.availableBeforeUtc then
			if os.difftime(now.UnixTimestamp, mission.availableBeforeUtc.UnixTimestamp) > 0 then
				return false -- mission is only available before now
			end
		end
	end

	if not prerequisitesCompleted(player, missionId) then
		return false -- prerequisite missions not complete
	end

	local previous = getMissionData(player, missionId)
	if previous then
		updateMissionCompletion(player, missionId)
		if (not previous.completed) and not previous.failed then
			return false -- player has the mission already in progress
		end

		-- mission isn't currently active
		if
			(not mission.repeatable and (previous.completedBefore or previous.failed))
			or (mission.repeatLimit ~= nil and (mission.repeatLimit <= (previous.timesEnded or 0)))
		then
			return false -- player has used up all mission repeats or mission is not repeatable
		end

		-- repeats left, but check time
		if previous.completedBefore and previous.startedAtUtc then
			local now = DateTime.now()
			if
				os.difftime(now.UnixTimestamp, previous.startedAtUtc) < math.max(0, mission.repeatCooldownSeconds or 0)
			then
				return false -- mission is repeatable, but not yet
			end
		end
	end

	return true
end

-- Unlock a mission for a given player.
local function unlockMission(
	player: Player,
	missionId: Types.MissionId,
	force: boolean, -- Skip mission requirements and availability.
	automatic: boolean -- Automatic unlocks can't unlock manual only missions
): boolean
	if not force then
		-- Check all requirements like repeatability, already unlocked, availability window etc.
		if not canPlayerUnlock(player, missionId, automatic) then
			return false -- Mission can't be unlocked normally yet.
		end
	end

	local data = MissionStore.getAsync(player)
	if not data then
		return false -- MissionStore data for that player is missing, only happens if DataStore access fails.
	end

	if not data[missionId] then
		-- User has never unlocked this mission before.
		data[missionId] = { taskProgress = {}, taskTimers = {} } :: Types.MissionData
	end

	local missionData = data[missionId]
	local mission = MissionsConfig[missionId]
	if (not missionData) or not mission then
		return false
	end

	-- Fill in initial mission information.
	missionData.completed = false
	missionData.failed = false
	missionData.startedAtUtc = DateTime.now().UnixTimestamp
	missionData.expirationTimer = TimerSystem.new(mission.expireSeconds, true)
	missionData.taskProgress = {}
	missionData.taskTimers = {}

	for taskId, task in mission.tasks do
		if not task then
			continue
		end

		if task.counter then
			trackCounter(player, task.counter.counterId)
		end

		if task.taskType == Types.TaskType.Count and (task.counter and task.counter.continueFromCounter) then
			-- Initialize task progress if it has a starting value.
			missionData.taskProgress[taskId] = CounterSystem.getCounter(player, task.counter.counterId)
		elseif task.taskType == Types.TaskType.Time then
			missionData.taskTimers[taskId] = TimerSystem.new(task.goalSeconds)

			-- Start the timer if it should start when the mission is unlocked.
			if
				(task.startImmediately or task.startImmeadiately) -- previous typo in config at launch, supported for backwards compatibility
				or (task.counter and CounterSystem.isTimerRunning(player, task.counter.counterId))
			then
				TimerSystem.start(missionData.taskTimers[taskId])
			end

			-- Copy in the value of the shared counter if it starts at the counter.
			if task.counter and task.counter.continueFromCounter then
				local elapsed = 0
				if task.includesOfflineTime then
					elapsed = CounterSystem.getElapsedSeconds(player, task.counter.counterId)
				else
					elapsed = CounterSystem.getElapsedSecondsOnline(player, task.counter.counterId)
				end
				TimerSystem.setElapsedSeconds(missionData.taskTimers[taskId], elapsed)
			end
		end
	end

	-- Call handlers on mission unlock
	local handler = unlockHandlers[missionId]
	if handler then
		handler(player, missionId)
	end

	fireMissionUpdatedEvent(player, missionId)

	for taskId, task in mission.tasks do
		fireTaskUpdatedEvent(player, missionId, taskId)
	end

	-- Log the unlock in analytics funnel
	MissionsAnalytics:logFunnelStep(player, missionId, "MissionUnlocked")

	return true
end

-- Function call to unlock a mission if it can be unlocked.
function Missions.unlockMission(player: Player, missionId: Types.MissionId): boolean
	return unlockMission(player, missionId, false, false)
end

local function checkUnlockMissionsWithPrerequisite(player: Player)
	for missionId, mission in MissionsConfig do
		if not mission or not mission.prerequisites then
			continue
		end

		unlockMission(player, missionId, false, true)
	end
end

-- Start the timer of a timed task on a mission.
function Missions.startTimedTask(player: Player, missionId: Types.MissionId, taskId: Types.TaskId)
	local data = getMissionData(player, missionId)
	if not data then
		return
	end

	if data.completed or data.failed then
		return
	end

	local mission = MissionsConfig[missionId]
	if not mission then
		return
	end

	if not mission.tasks[taskId] then
		return
	end

	if not TimerSystem.isRunning(data.taskTimers[taskId]) then
		TimerSystem.start(data.taskTimers[taskId])
		fireTaskUpdatedEvent(player, missionId, taskId)
	end
end

-- Stop the timer of a timed mission task.
function Missions.stopTimedTask(player: Player, missionId: Types.MissionId, taskId: Types.TaskId)
	local data = getMissionData(player, missionId)
	if not data then
		return
	end

	if data.completed or data.failed then
		return
	end

	local mission = MissionsConfig[missionId]
	if not mission then
		return
	end

	local task = mission.tasks[taskId]
	if not task then
		return
	end

	if not TimerSystem.isRunning(data.taskTimers[taskId]) then
		TimerSystem.stop(data.taskTimers[taskId])
		fireTaskUpdatedEvent(player, missionId, taskId)
	end
	updateMissionCompletion(player, missionId)
end

-- Add an amount of progress to a specific task on a specific player's mission.
function Missions.addProgressToTask(player: Player, missionId: Types.MissionId, taskId: Types.TaskId, value: number?)
	local previous = Missions.getTaskProgress(player, missionId, taskId)
	Missions.setTaskProgress(player, missionId, taskId, previous + (value or 1))
end

-- Set the progress of a specific task on a specific player's mission.
function Missions.setTaskProgress(player: Player, missionId: Types.MissionId, taskId: Types.TaskId, value: number)
	local data = getMissionData(player, missionId)
	if not data then
		return
	end

	if data.completed or data.failed then
		return
	end

	local mission = MissionsConfig[missionId]
	if not mission then
		return
	end

	local task = mission.tasks[taskId]
	if not task then
		return
	end

	if task.taskType == Types.TaskType.Count then
		data.taskProgress[taskId] = value
	elseif task.taskType == Types.TaskType.Time then
		TimerSystem.setElapsedSeconds(data.taskTimers[taskId], value)
	end

	fireTaskUpdatedEvent(player, missionId, taskId)

	updateMissionCompletion(player, missionId)
end

-- Get the progress of a player's task on a mission.
function Missions.getTaskProgress(player: Player, missionId: Types.MissionId, taskId: Types.TaskId): number
	local data = getMissionData(player, missionId)
	if not data then
		return 0
	end

	local mission = MissionsConfig[missionId]
	if not mission then
		return 0
	end

	local task = mission.tasks[taskId]
	if not task then
		return 0
	end

	-- for time based tasks, add the current time
	if task.taskType == Types.TaskType.Time then
		return TimerSystem.getElapsedSeconds(data.taskTimers[taskId])
	elseif task.taskType == Types.TaskType.Count then
		return data.taskProgress[taskId] or 0
	end

	return 0
end

local function isTaskComplete(player: Player, missionId: Types.MissionId, taskId: Types.TaskId): boolean
	local mission = MissionsConfig[missionId]
	if not mission then
		return false
	end

	local progress = Missions.getTaskProgress(player, missionId, taskId)
	local task = mission.tasks[taskId]

	if task and task.taskType == Types.TaskType.Count then
		-- Check if count based task is met.
		if progress >= task.goalCount then
			return true
		end
	end

	if task and task.taskType == Types.TaskType.Time then
		-- Check if time based task is met.
		if progress >= task.goalSeconds then
			return true
		end
	end

	return false
end

-- Get the ids of all active missions for a player.
function Missions.getActiveMissionIds(player: Player): { Types.MissionId }
	local data = MissionStore.getAsync(player)
	local missionIds: { Types.MissionId } = {}
	if not data then
		return missionIds
	end

	-- Unlock any missions that might have become available.
	for missionId, mission in MissionsConfig do
		unlockMission(player, missionId, false, true)
	end

	for missionId, mission in data do
		if mission and not (mission.completed or mission.failed) then
			-- If mission is still active, check to make sure it actually is.
			updateMissionCompletion(player, missionId)
			if not (mission.completed or mission.failed) then
				table.insert(missionIds, missionId)
			end
		end
	end

	return missionIds
end

local function clientRequestMissionUpdate(player: Player, missionId: Types.MissionId)
	Missions.getActiveMissionIds(player)
end

local function clientClaimMissionRewards(player: Player, missionId: Types.MissionId)
	updateMissionCompletion(player, missionId)

	local data = getMissionData(player, missionId)
	if not data then
		return
	end

	local mission = MissionsConfig[missionId]
	if not mission then
		return
	end

	if data.failed or data.completed then
		return -- mission is not currently active, just a record of it
	end

	local allComplete = true
	-- Check completion of all tasks on the mission
	for taskId, task in mission.tasks do
		if not isTaskComplete(player, missionId, taskId) then
			-- At least one task is not completed yet
			allComplete = false
			break
		elseif task and task.counter then
			-- Task is completed, if it has a counter stop tracking it.
			untrackCounter(player, task.counter.counterId)
		end
	end
	if allComplete then
		-- All tasks were completed, mark the mission as completed and call handler
		data.completed = true
		data.completedBefore = true
		data.taskProgress = {}
		data.taskTimers = {}
		data.timesEnded = (data.timesEnded or 0) + 1
		local handler = completionHandlers[missionId]
		if handler then
			handler(player, missionId)

			-- Log the claim in analytics funnel
			MissionsAnalytics:logFunnelStep(player, missionId, "MissionClaimed")
		end

		fireMissionUpdatedEvent(player, missionId)

		-- Log the completion in analytics funnel
		MissionsAnalytics:logFunnelStep(player, missionId, "MissionCompleted")

		-- Check for any missions that would be unlocked by completing this one
		checkUnlockMissionsWithPrerequisite(player)
	end
end

local function updateLeavingPlayerElapsedTime(
	player: Player,
	data: Types.PlayerMissionData?,
	isPlayerRemoving: boolean?
): Types.PlayerMissionData?
	if data == nil or next(data) == nil then
		return data
	end

	for _index, missionId in Missions.getActiveMissionIds(player) do
		local missionData = data[missionId]
		if not missionData then
			continue
		end

		local mission = MissionsConfig[missionId]
		if not mission then
			continue
		end

		-- if mission expires only while online, track how long the player was online for
		if not mission.expireCountOffline then
			TimerSystem.suspend(missionData.expirationTimer)
		end

		-- Find any time based tasks that are active only when online
		for id, task in mission.tasks do
			if not task then
				continue
			end

			if task.counter and isPlayerRemoving then
				-- Stop tracking the task's counter since the player is leaving.
				untrackCounter(player, task.counter.counterId)
			end

			if task.taskType ~= Types.TaskType.Time then
				continue
			end
			if not task.includesOfflineTime then
				TimerSystem.suspend(missionData.taskTimers[id])
			end
		end
	end

	return data
end

local function initializeMissionsOnPlayerAdd(
	player: Player,
	missionsData: Types.PlayerMissionData
): Types.PlayerMissionData
	for missionId, mission in MissionsConfig do
		local data = missionsData[missionId]

		if not data or not mission then
			continue
		end

		if not mission.expireCountOffline then
			TimerSystem.unsuspend(data.expirationTimer)
		end

		for taskId, task in mission.tasks do
			if not task then
				continue
			end

			if task.taskType == Types.TaskType.Time then
				if not task.includesOfflineTime and data.taskTimers[taskId] then
					TimerSystem.unsuspend(data.taskTimers[taskId])
				end
			end

			if task.counter and not (data.completed or data.failed) then
				-- Track the task's counter.
				trackCounter(player, task.counter.counterId)
			end

			fireTaskUpdatedEvent(player, missionId, taskId)
		end

		fireMissionUpdatedEvent(player, missionId)
	end

	return missionsData
end

-- Preload the data of all new players.
local function onPlayerAdded(player: Player)
	local data = MissionStore.getAsync(player)
	if not data then
		warn(`Unable to get missions data for player {player}`)
	end

	Missions.getActiveMissionIds(player)
end

-- Mission Store data initialized handler.
local function onDataInitialize(player: Player, data: Types.PlayerMissionData): Types.PlayerMissionData
	-- If data is nil, initialize it.
	if not data then
		data = {}
	end

	-- Handle all timer updates for missions and their tasks
	initializeMissionsOnPlayerAdd(player, data)

	-- Start tracking any repeating categories
	updateCategoryCounters(player)

	return data
end

-- Initialize call to action button handler invoked by the client.
local function onTaskCallToAction(player: Player, missionId: Types.MissionId, taskId: Types.TaskId): boolean
	local mission = MissionsConfig[missionId]
	if not mission then
		return false
	end

	local task = mission.tasks[taskId]
	if not task then
		return false
	end

	if not task.callToAction then
		-- Task is not configured to have a call to action.
		return false
	end

	local callback = task.callToAction.callback
	if not callback then
		error(`No callback function found for mission {missionId} and task {taskId}`)
	end

	return callback(missionId, taskId)
end

local function initialize()
	-- Register the remote event functions.
	claimMissionRemoteEvent.OnServerEvent:Connect(clientClaimMissionRewards)
	requestMissionUpdateEvent.OnServerEvent:Connect(clientRequestMissionUpdate)

	-- Register the remote functions.
	callToActionRemoteFunction.OnServerInvoke = onTaskCallToAction
	getMissionDataBindableFunction.OnInvoke = getMissionData
	getMissionDataRemoteFunction.OnServerInvoke = getMissionData

	Players.PlayerAdded:Connect(onPlayerAdded)
	for _, player in Players:GetPlayers() do
		onPlayerAdded(player)
	end

	MissionStore.claim(onDataInitialize, updateLeavingPlayerElapsedTime)
end

initialize()

return Missions
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX38A67AFF1E94496CBB00BFF105D4920E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">MissionsAnalytics</string>
						<string name="ScriptGuid">{068a172c-2de9-498e-bbc8-8b6e497fa82f}</string>
						<ProtectedString name="Source"><![CDATA[--!strict

--[[
	Module for logging Analytics events for Missions.

	When a mission or task is completed, it will be logged as a Funnel step event.
--]]

local ReplicatedStorage = game:GetService("ReplicatedStorage").Shared

-- Protect the run context, this ModuleScript is only intended to run on the server
require(ReplicatedStorage.FeaturePackagesCore.Modules.ProtectRunContext).server()

local AnalyticsService = game:GetService("AnalyticsService")

local Types = require(ReplicatedStorage.Missions.Configs.Types)
local Constants = require(ReplicatedStorage.Missions.Configs.Constants)
local Missons = require(ReplicatedStorage.Missions.Configs.Missions)
local InstrumentationTypes = require(ReplicatedStorage.Missions.Configs.InstrumentationTypes)
local MissionUtils = require(ReplicatedStorage.Missions.Utils.MissionUtils)

local MissionsAnalytics = {}

local FunnelStepIdByName: { [InstrumentationTypes.FunnelStepName]: number } = {
	[InstrumentationTypes.FunnelStepName.MissionUnlocked] = 1,
	[InstrumentationTypes.FunnelStepName.MissionOpened] = 2,
	[InstrumentationTypes.FunnelStepName.MissionExpired] = 3,
	[InstrumentationTypes.FunnelStepName.MissionCompleted] = 4,
	[InstrumentationTypes.FunnelStepName.MissionClaimed] = 5,
}

function MissionsAnalytics:logFunnelStep(
	player: Player,
	missionId: Types.MissionId,
	stepName: InstrumentationTypes.FunnelStepName
)
	local success = pcall(function()
		local mission = Missons[missionId]

		-- If mission does not exist anymore, skip
		if not mission then
			warn(`Mission {missionId} does not exist`)
			return
		end

		local missionData = MissionUtils.getMissionData(player, missionId)

		if not missionData then
			warn(`Mission data for {missionId} does not exist, cannot log funnel step {stepName}`)
			return
		end

		local startedAtUtc = missionData.startedAtUtc

		local funnelSessionId = `{player.UserId}-{missionId}-{startedAtUtc}`

		AnalyticsService:LogFunnelStepEvent(
			player,
			Constants.Analytics.Funnel.NAME,
			funnelSessionId,
			FunnelStepIdByName[stepName],
			stepName
		)
	end)

	if not success then
		warn(`Failed to log analytics funnel step {stepName} for mission {missionId}`)
	end
end

return MissionsAnalytics
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Script" referent="RBX063EA3FDD3A6421ABB9DA65F792C2C3D">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">MissionInstrumentation</string>
						<token name="RunContext">1</token>
						<string name="ScriptGuid">{61418a9c-fa59-4e8e-8141-7c6ce4f535fd}</string>
						<ProtectedString name="Source"><![CDATA[--!strict

--[[
	MissionInstrumentation will handle listening to events and logging analytics events for Missions.
--]]

local ReplicatedStorage = game:GetService("ReplicatedStorage").Shared

-- Analytics
local MissionsAnalytics = require(script.Parent.MissionsAnalytics)

local Types = require(ReplicatedStorage.Missions.Configs.Types)
local InstrumentationTypes = require(ReplicatedStorage.Missions.Configs.InstrumentationTypes)
local getInstance = require(ReplicatedStorage.FeaturePackagesCore.Utils.getInstance)

local missionAnalyticsRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "MissionAnalyticsRemoteEvent")
local missionAnalyticsBindableEvent: BindableEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "MissionAnalyticsBindableEvent")

local function handleMissionAnalyticsEventAsync(
	player: Player,
	missionId: Types.MissionId,
	stepName: InstrumentationTypes.FunnelStepName
)
	MissionsAnalytics:logFunnelStep(player, missionId, stepName)
end

local function initialize()
	missionAnalyticsRemoteEvent.OnServerEvent:Connect(handleMissionAnalyticsEventAsync)
	missionAnalyticsBindableEvent.Event:Connect(handleMissionAnalyticsEventAsync)
end

initialize()
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX459D3885CB1A4369ACDE4252CA10EDBF">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">MissionStore</string>
						<string name="ScriptGuid">{f6ae053a-ee9f-409b-9bf7-30b18a18fb8f}</string>
						<ProtectedString name="Source"><![CDATA[--!strict

--[[
	Wrapper around DataStore used by Missions to store and retrieve mission data.
--]]

local ReplicatedStorage = game:GetService("ReplicatedStorage").Shared

-- Protect the run context, this ModuleScript is only intended to run on the server
require(ReplicatedStorage.FeaturePackagesCore.Modules.ProtectRunContext).server()

local Types = require(ReplicatedStorage.Missions.Configs.Types)
local DataStoreTypes = require(ReplicatedStorage.FeaturePackagesCore.Configs.DataStoreTypes)
local FeaturePackagesStore = require(ReplicatedStorage.FeaturePackagesCore.Server.DataStore.FeaturePackagesStore)

local MissionStore = {}

local TABLE_ID = "Missions"

function MissionStore.getAsync(player: Player): Types.PlayerMissionData?
	-- Get the data from the FeaturePackagesStore, which caches the data
	local data = FeaturePackagesStore.getAsync(player, TABLE_ID) :: Types.PlayerMissionData?

	if not data then
		data = {}
		MissionStore.setAsync(player, data)
	end

	return data
end

function MissionStore.setAsync(player: Player, data: Types.PlayerMissionData?): boolean
	-- Attempt to set the data in the data store, but passing onlySaveToCache as true
	return FeaturePackagesStore.setAsync(player, TABLE_ID, data, true)
end

function MissionStore.removeAsync(player: Player): boolean
	-- Attempt to remove the data in the data store
	local success = FeaturePackagesStore.removeAsync(player, TABLE_ID)
	return success
end

function MissionStore.claim(initialize: DataStoreTypes.DataCallback, transform: DataStoreTypes.DataCallback)
	-- Claim the data from the FeaturePackagesStore, which caches the data
	FeaturePackagesStore.bindToTransform(TABLE_ID, transform)
	FeaturePackagesStore.bindToInitialize(TABLE_ID, initialize)
end

return MissionStore
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX178E04D10D284ED093408CF2091F2015">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<string name="Name">Examples</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX95EE7EF90CBE490EABA97FC8E7E4EB09">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">OtherGameModule</string>
						<string name="ScriptGuid">{e0bbec80-8022-4a01-b160-9600ebd35381}</string>
						<ProtectedString name="Source"><![CDATA[--!strict

--[[
	Example of a server script that can be used to define a function that is used for a call to action button for a mission.
	Edit this if you would like to use a call to action button for a mission. 
--]]

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Types = require(ReplicatedStorage.Missions.Configs.Types)

local OtherGameModule = {}

-- Replace this function with your own logic for handling the call to action button
function OtherGameModule.callToAction(missionId: Types.MissionId, taskId: Types.TaskId): boolean
	print(`Other game module call to action for mission {missionId} for {taskId}`)
    return true
end

return OtherGameModule]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX2F10C6CEA9E74E92A1C1360B70CDF831">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Utils</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBXCAA09BB57FAE44628A1423FB7EBDAA96">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">MissionUtils</string>
					<string name="ScriptGuid">{76d6f515-da46-48c9-ae96-d41c049027b6}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage").Shared
local RunService = game:GetService("RunService")
local Types = require(ReplicatedStorage.Missions.Configs.Types)
local getInstance = require(ReplicatedStorage.FeaturePackagesCore.Utils.getInstance)
local InstrumentationTypes = require(ReplicatedStorage.Missions.Configs.InstrumentationTypes)

-- Util data events
local getMissionDataRemoteFunction: RemoteFunction =
	getInstance(ReplicatedStorage, "Missions", "Functions", "GetMissionDataRemoteFunction")
local getMissionDataBindableFunction: BindableFunction =
	getInstance(ReplicatedStorage, "Missions", "Functions", "GetMissionDataBindableFunction")

-- Util analytics events
local missionAnalyticsRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "MissionAnalyticsRemoteEvent")
local missionAnalyticsBindableEvent: BindableEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "MissionAnalyticsBindableEvent")

local MissionUtils = {}

-- Log a funnel step for a mission
function MissionUtils.logFunnelStep(
	player: Player,
	missionId: Types.MissionId,
	funnelStepName: InstrumentationTypes.FunnelStepName
)
	local isServer = RunService:IsServer()

	-- If this module is running on the server, we must use a BindableEvent
	if isServer then
		return missionAnalyticsBindableEvent:Fire(player, missionId, funnelStepName)
	end

	-- Else, this module is running on the client and we must use the RemoteEvent
	missionAnalyticsRemoteEvent:FireServer(missionId, funnelStepName)
end


-- Executes either a RemoteFunction (on Client) or a BindableFunction (on server) to get mission data from the server
function MissionUtils.getMissionData(player: Player, missionId: Types.MissionId): (Types.MissionData?, number?)
	local isServer = RunService:IsServer()

	-- If this module is running on the server, we can call the server-side function with bindable function
	if isServer then
		return getMissionDataBindableFunction:Invoke(player, missionId)
	end

	-- Else, this module is running on the client and we need to call the server-side function with remote function
	return getMissionDataRemoteFunction:InvokeServer(missionId)
end

return MissionUtils]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX999056288ED040949877A6C25B7A3CBE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Client</string>
				<token name="RunContext">2</token>
				<string name="ScriptGuid">{fef63f91-0510-4366-93f8-96da859655d4}</string>
				<ProtectedString name="Source"><![CDATA[--!strict

local MissionsClient = require(script.MissionsClient)
local MissionsUI = require(script.MissionsUI)

local function initialize()
	MissionsClient.setMissionUpdatedHandler(MissionsUI.updateMissionList)
	MissionsClient.setCategoryTimerUpdatedHandler(MissionsUI.updateCategoryList)
	MissionsClient.setTaskUpdatedHandler(MissionsUI.updateTaskList)
end

initialize()
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBXF645349F4FF845A893C52CE3538EC7EE">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">MissionsClient</string>
					<string name="ScriptGuid">{a963f2db-a3cf-4205-9347-33e177527e36}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

--[[
	This ModuleScript manages the client side portion of Missions that is not part of the GUI.

	This script will listen for MissionUpdated and TaskUpdated events from the server,
	and will handle the logic for checking the state of missions on the client.
	Also handles sending claim mission events back to the server.
--]]

local ReplicatedStorage = game:GetService("ReplicatedStorage").Shared
local Players = game:GetService("Players")
local player = Players.LocalPlayer :: Player

-- Protect the run context, this ModuleScript is only intended to run on the client
require(ReplicatedStorage.FeaturePackagesCore.Modules.ProtectRunContext).client()

local MissionsConfig = require(ReplicatedStorage.Missions.Configs.Missions)
local Types = require(ReplicatedStorage.Missions.Configs.Types)
local TimerSystem = require(ReplicatedStorage.FeaturePackagesCore.Modules.TimerSystem)
local getInstance = require(ReplicatedStorage.FeaturePackagesCore.Utils.getInstance)

local missionUpdatedRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "MissionUpdatedRemoteEvent")
local taskUpdatedRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "TaskUpdatedRemoteEvent")
local categoryTimerUpdatedRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "CategoryTimerUpdatedRemoteEvent")
local claimMissionRemoteEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "ClaimMissionRemoteEvent")
local requestMissionUpdateEvent: RemoteEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "RequestMissionUpdateRemoteEvent")
local callToActionRemoteFunction: RemoteFunction =
	getInstance(ReplicatedStorage, "Missions", "Functions", "CallToActionRemoteFunction")
local notificationBindableEvent: BindableEvent =
	getInstance(ReplicatedStorage, "Missions", "Events", "NotificationBindableEvent")

export type MissionState = {
	completed: boolean,
	failed: boolean,
	startedAtUtc: number?,
	expirationTimer: TimerSystem.Timer?,
	taskProgress: { [Types.TaskId]: number? },
	taskTimer: { [Types.TaskId]: TimerSystem.Timer? },
}

type MissionUpdatedHandlerFunction = (missionId: Types.MissionId, missionState: MissionState) -> ()

type TaskUpdatedHandlerFunction = (
	missionId: Types.MissionId,
	taskId: Types.TaskId,
	missionState: MissionState
) -> ()

type CategoryTimerUpdatedHandlerFunction = (categoryId: Types.CategoryId, timer: TimerSystem.Timer) -> ()

local missionState = {} :: { [Types.MissionId]: MissionState? }
local categoryTimers = {} :: { [Types.CategoryId]: TimerSystem.Timer? }
local missionUpdatedHandler = nil :: MissionUpdatedHandlerFunction?
local taskUpdatedHandler = nil :: TaskUpdatedHandlerFunction?
local categoryTimerUpdatedHandlerFunction = nil :: CategoryTimerUpdatedHandlerFunction?
local sessionStartTime: number? = nil

local MissionsClient = {}

-- Set the handler to receive updates about the status of missions changing.
function MissionsClient.setMissionUpdatedHandler(handler: MissionUpdatedHandlerFunction)
	missionUpdatedHandler = handler
end

-- Set the handler to receive updates about the status of tasks changing.
function MissionsClient.setTaskUpdatedHandler(handler: TaskUpdatedHandlerFunction)
	taskUpdatedHandler = handler
end

-- Set the handler to receive updates about the time before a category resets changing.
function MissionsClient.setCategoryTimerUpdatedHandler(handler: CategoryTimerUpdatedHandlerFunction)
	categoryTimerUpdatedHandlerFunction = handler
end

-- Handler for when the call to action button is clicked on a task.
function MissionsClient.onCallToActionButtonClicked(missionId: Types.MissionId, taskId: Types.TaskId): boolean
	local mission = MissionsConfig[missionId]
	if not mission then
		return false
	end

	if not mission.tasks[taskId] then
		return false
	end

	local task = mission.tasks[taskId]

	if not task then
		return false
	end

	if not task.callToAction then
		return false
	end

	local callToActionResult = callToActionRemoteFunction:InvokeServer(missionId, taskId)
	return callToActionResult
end

local function getMissionState(missionId: Types.MissionId): MissionState
	local state = missionState[missionId]
		or {
			completed = false,
			failed = false,
			taskProgress = {},
			taskTimer = {},
		}

	if not missionState[missionId] then
		-- Initialize the state
		missionState[missionId] = state
	end

	return state
end

-- Event handler for mission updates fired by the server.
local function onMissionUpdatedEvent(
	missionId: Types.MissionId,
	completed: boolean?,
	failed: boolean?,
	startedAtUtc: number?,
	expirationTimer: TimerSystem.Timer?
)
	-- Set the login time when the first mission data is sent to the client.
	if not sessionStartTime then
		sessionStartTime = DateTime.now().UnixTimestamp + 1
	end

	local state = getMissionState(missionId)

	-- Update the state
	state.completed = completed or false
	state.failed = failed or false
	state.startedAtUtc = startedAtUtc
	state.expirationTimer = expirationTimer

	-- Progress of completed missions isn't stored, it's just assumed to be completed.
	if completed then
		state.taskProgress = {}
		state.taskTimer = {}
	end

	if missionUpdatedHandler then
		missionUpdatedHandler(missionId, state)
	end
end

-- Event handler for task progress updates fired from the server.
local function onTaskUpdatedEvent(
	missionId: Types.MissionId,
	taskId: Types.TaskId,
	progress: number?,
	taskTimer: TimerSystem.Timer?
)
	local state = getMissionState(missionId)

	state.taskProgress[taskId] = progress
	state.taskTimer[taskId] = taskTimer

	if taskUpdatedHandler then
		taskUpdatedHandler(missionId, taskId, state)
	end
end

-- Event handler for category updates fired from the server.
local function onCategoryTimerUpdatedEvent(categoryId: Types.CategoryId, timer: TimerSystem.Timer)
	categoryTimers[categoryId] = timer
	if categoryTimerUpdatedHandlerFunction then
		categoryTimerUpdatedHandlerFunction(categoryId, timer)
	end
end

-- Get the timer counting down to the time a category resets.
function MissionsClient.getCategoryResetTimer(categoryId: Types.CategoryId): TimerSystem.Timer?
	return categoryTimers[categoryId]
end

-- Get the start unix timestamp in seconds of a mission.
function MissionsClient.getMissionStartTime(missionId: Types.MissionId): number?
	local state = missionState[missionId]
	if not state then
		return nil
	end

	return state.startedAtUtc
end

-- Ask the server to claim the rewards for a mission.
function MissionsClient.claimMission(missionId: Types.MissionId)
	claimMissionRemoteEvent:FireServer(missionId)
end

-- Ask the server to check for any updates pertaining to a mission.
function MissionsClient.updateMission(missionId: Types.MissionId)
	requestMissionUpdateEvent:FireServer(missionId)
end

-- Get the current progress on given task.
function MissionsClient.getTaskProgress(missionId: Types.MissionId, taskId: Types.TaskId): number
	local data = missionState[missionId]
	if not data then
		return 0
	end

	local mission = MissionsConfig[missionId]
	if not mission then
		return 0
	end

	local task = mission.tasks[taskId]
	if not task then
		return 0
	end

	-- for time based tasks, add the current time
	if task.taskType == Types.TaskType.Time then
		return TimerSystem.getElapsedSeconds(data.taskTimer[taskId])
	elseif task.taskType == Types.TaskType.Count then
		return data.taskProgress[taskId] or 0
	end

	return 0
end

-- Check if a task has an actively ticking timer.
function MissionsClient.isTaskTimerRunning(missionId: Types.MissionId, taskId: Types.TaskId): boolean
	local data = missionState[missionId]
	if not data then
		return false
	end

	return TimerSystem.isRunning(data.taskTimer[taskId])
end

-- Get the required progress to complete a given task.
function MissionsClient.getTaskTarget(missionId: Types.MissionId, taskId: Types.TaskId): number
	local mission = MissionsConfig[missionId]
	if not mission then
		return 0
	end

	local task = mission.tasks[taskId]
	if not task then
		return 0
	end

	if task.taskType == Types.TaskType.Count then
		return task.goalCount
	elseif task.taskType == Types.TaskType.Time then
		return task.goalSeconds
	else
		warn(`Unknown task type {task.taskType} for task {taskId} on mission {missionId}`)
	end

	return 0
end

-- Check if a task is completed.
function MissionsClient.isTaskCompleted(missionId: Types.MissionId, taskId: Types.TaskId): boolean
	if MissionsClient.isMissionCompleted(missionId) then
		return true
	end

	local taskProgress = MissionsClient.getTaskProgress(missionId, taskId)
	local taskTarget = MissionsClient.getTaskTarget(missionId, taskId)

	return taskProgress >= taskTarget
end

-- Get the number of tasks on a mission.
function MissionsClient.getTaskCount(missionId: Types.MissionId): number
	local mission = MissionsConfig[missionId]
	if not mission then
		return 0
	end

	local taskCount = 0
	for _ in mission.tasks do
		taskCount = taskCount + 1
	end
	return taskCount
end

-- Get the number of tasks on a mission that are completed.
function MissionsClient.getCompletedTaskCount(missionId: Types.MissionId): number
	local mission = MissionsConfig[missionId]
	if not mission then
		return 0
	end

	local taskCount = 0
	for taskId in mission.tasks do
		if MissionsClient.isTaskCompleted(missionId, taskId) then
			taskCount = taskCount + 1
		end
	end
	return taskCount
end

-- Get a list of all category ids.
function MissionsClient.getCategoryIds(): { Types.CategoryId }
	local categoryTable: { [Types.CategoryId]: boolean? } = {}
	local categoryList: { Types.CategoryId } = {}

	for name, mission in MissionsConfig do
		if not mission then
			continue
		end

		if not categoryTable[mission.categoryId] then
			table.insert(categoryList, mission.categoryId)
		end
		categoryTable[mission.categoryId] = true
	end

	return categoryList
end

-- Get the category of a mission.
function MissionsClient.getMissionCategory(missionId: Types.MissionId): Types.CategoryId?
	local mission = MissionsConfig[missionId]
	if not mission then
		return nil
	end
	return mission.categoryId
end

-- Get the ids of all active missions.
function MissionsClient.getActiveMissionIds(categoryId: Types.CategoryId?): { Types.MissionId }
	local missions = {} :: { Types.MissionId }
	for missionId, data in missionState do
		if not data or data.completed or data.failed then
			continue
		end

		local mission = MissionsConfig[missionId]
		if categoryId and mission and mission.categoryId ~= categoryId then
			continue
		end

		table.insert(missions, missionId)
	end

	return missions
end

-- Get display metadata for a mission.
function MissionsClient.getMissionMetadata(missionId: Types.MissionId?): Types.MissionMetadata
	if not missionId then
		return {}
	end
	local mission = MissionsConfig[missionId]
	if not mission then
		return {}
	end

	if not mission.metadata then
		return {}
	end

	return mission.metadata
end

-- Get display metadata for a task.
function MissionsClient.getTaskMetadata(missionId: Types.MissionId, taskId: Types.TaskId): Types.TaskMetadata
	local mission = MissionsConfig[missionId]
	if not mission then
		return {}
	end

	local task = mission.tasks[taskId]
	if not task then
		return {}
	end

	if not task.metadata then
		return {}
	end

	return task.metadata
end

-- Get the ids of all completed missions.
function MissionsClient.getCompletedMissionIds(categoryId: Types.CategoryId?): { Types.MissionId }
	local missions = {} :: { Types.MissionId }
	for missionId, data in missionState do
		if not data then
			continue
		end

		local mission = MissionsConfig[missionId]
		if categoryId and mission and mission.categoryId ~= categoryId then
			continue
		end

		if data.completed then
			table.insert(missions, missionId)
		end
	end

	return missions
end

-- Get the ids of all failed missions.
function MissionsClient.getFailedMissionIds(categoryId: Types.CategoryId?): { Types.MissionId }
	local missions = {} :: { Types.MissionId }
	for missionId, data in missionState do
		if not data then
			continue
		end

		local mission = MissionsConfig[missionId]
		if categoryId and mission and mission.categoryId ~= categoryId then
			continue
		end

		if data.failed then
			table.insert(missions, missionId)
		end
	end

	return missions
end

-- Get the ids of all locked missions.
function MissionsClient.getLockedMissionIds(categoryId: Types.CategoryId?): { Types.MissionId }
	local missions = {} :: { Types.MissionId }
	for missionId in MissionsConfig do
		if missionState[missionId] then
			continue
		end

		local mission = MissionsConfig[missionId]
		if categoryId and mission and mission.categoryId ~= categoryId then
			continue
		end

		table.insert(missions, missionId)
	end

	return missions
end

-- Check if a mission is currently locked.
function MissionsClient.isMissionLocked(missionId: Types.MissionId): boolean
	local mission = MissionsConfig[missionId]
	if not mission then
		return true
	end
	if mission and mission.requiredTrackName then
		-- If the mission has a requiredTrackName, check if the player has unlocked it.
		local SeasonUtils = require(ReplicatedStorage.SeasonPasses.Utils.SeasonUtils)
		if not SeasonUtils.isPremiumTrackUnlocked(player) then
			return true
		end
	end
	return (MissionsConfig[missionId] and not missionState[missionId]) or false
end

-- Check if a mission can be claimed.
function MissionsClient.isMissionReadyToClaim(missionId: Types.MissionId): boolean
	local mission = MissionsConfig[missionId]
	if not mission then
		return false
	end

	local data = missionState[missionId]
	if not data then
		return false
	end

	-- Check if mission is already completed.
	if data.completed or data.failed then
		return false
	end

	-- Check to see if any tasks the mission has are not complete yet.
	for taskId, task in mission.tasks do
		if MissionsClient.getTaskTarget(missionId, taskId) > MissionsClient.getTaskProgress(missionId, taskId) then
			return false
		end
	end

	return true
end

-- Check if a mission has been failed.
function MissionsClient.isMissionFailed(missionId: Types.MissionId): boolean
	local data = missionState[missionId]
	if not data then
		return false
	end

	return data.failed
end

-- Check if a mission has been completed.
function MissionsClient.isMissionCompleted(missionId: Types.MissionId): boolean
	local data = missionState[missionId]
	if not data then
		return false
	end

	return data.completed
end

-- Get the time a mission will unlock automatically, if it has such a time.
function MissionsClient.getMissionUnlockTime(missionId: Types.MissionId): number?
	local mission = MissionsConfig[missionId]
	if not mission then
		return nil
	end

	if not mission.availableAfterUtc then
		return nil
	end

	return mission.availableAfterUtc.UnixTimestamp
end

-- Get the time at which a mission will be failed, if it has one.
function MissionsClient.getMissionFailTime(missionId: Types.MissionId): number?
	local data = missionState[missionId]
	if not data then
		return nil
	end

	local mission = MissionsConfig[missionId]
	if not mission then
		return nil
	end

	if MissionsClient.isMissionLocked(missionId) then
		return nil
	end

	if MissionsClient.isMissionFailed(missionId) then
		return nil
	end

	if MissionsClient.isMissionCompleted(missionId) then
		return nil
	end

	local result = nil
	if mission.expireSeconds then
		result = TimerSystem.getEndTime(data.expirationTimer)
	end

	if result and mission.availableBeforeUtc then
		result = math.min(result, mission.availableBeforeUtc.UnixTimestamp)
	elseif mission.availableBeforeUtc then
		result = mission.availableBeforeUtc.UnixTimestamp
	end

	return result
end

-- Return if there are any missions that can have rewards that can be claimed.
function MissionsClient.hasClaimableMissions(): boolean
	for missionId in MissionsConfig do
		if MissionsClient.isMissionReadyToClaim(missionId) then
			return true
		end
	end
	return false
end

-- Check if there are no missions in the mission list.
function MissionsClient.isMissionListEmpty(): boolean
	for missionId in MissionsConfig do
		return false
	end
	return true
end

function MissionsClient.updateSeasonMissionClaimableStatus()
	notificationBindableEvent:Fire()
end

function MissionsClient.seasonPassesAvailable(): boolean
	-- Loop through all missions and check if any of them have a requiredTrackName.
	for missionId in MissionsConfig do
		local mission = MissionsConfig[missionId]
		if mission.requiredTrackName then
			return true
		end
	end
	return false
end

-- Register the events listened to by MissionsClient.
local function initialize()
	missionUpdatedRemoteEvent.OnClientEvent:Connect(onMissionUpdatedEvent)
	taskUpdatedRemoteEvent.OnClientEvent:Connect(onTaskUpdatedEvent)
	categoryTimerUpdatedRemoteEvent.OnClientEvent:Connect(onCategoryTimerUpdatedEvent)
end

initialize()

return MissionsClient
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXD95240BF03104C82A5D80F11D1B47692">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">MissionsUI</string>
					<string name="ScriptGuid">{db22bfd5-a157-4e34-b2d4-73039effd776}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

local ReplicatedStorage = game:GetService("ReplicatedStorage").Shared

-- Protect the run context, this ModuleScript is only intended to run on the client
require(ReplicatedStorage.FeaturePackagesCore.Modules.ProtectRunContext).client()

local Players = game:GetService("Players")

local MissionsClient = require(ReplicatedStorage.Missions.Client.MissionsClient)
local MissionsConfig = require(ReplicatedStorage.Missions.Configs.Missions)
local Constants = require(ReplicatedStorage.Missions.Configs.Constants)
local SharedConstants = require(ReplicatedStorage.FeaturePackagesCore.Configs.SharedConstants)
local ModalManager = require(ReplicatedStorage.FeaturePackagesCore.Client.ModalManager)
local Types = require(ReplicatedStorage.Missions.Configs.Types)
local TimerSystem = require(ReplicatedStorage.FeaturePackagesCore.Modules.TimerSystem)
local Attributes = require(ReplicatedStorage.FeaturePackagesCore.Configs.Attributes)
local TranslationStrings = require(ReplicatedStorage.FeaturePackagesCore.Configs.TranslationStrings)

local getInstance = require(ReplicatedStorage.FeaturePackagesCore.Utils.getInstance)
local formatLargeNumber = require(ReplicatedStorage.FeaturePackagesCore.Utils.formatLargeNumber)
local formatTime = require(ReplicatedStorage.FeaturePackagesCore.Utils.formatTime)
local playPurchaseEffect = require(ReplicatedStorage.FeaturePackagesCore.Effects.playPurchaseEffect)
local MissionsUtils = require(ReplicatedStorage.Missions.Utils.MissionUtils)
local InstrumentationTypes = require(ReplicatedStorage.Missions.Configs.InstrumentationTypes)

local player = Players.LocalPlayer :: Player

-- Initialize the Missions ScreenGui
local playerGui = player:WaitForChild("PlayerGui") :: PlayerGui
local missionsGui: ScreenGui = getInstance(ReplicatedStorage, "Missions", "Objects", "MissionsGui"):Clone()
missionsGui.Parent = playerGui

local hudGui = ModalManager.getHudGui()
local hudButtonParent = getInstance(hudGui, "ButtonList2")
local hudButton: TextButton = getInstance(ReplicatedStorage, "Missions", "Objects", "MissionsHudButton"):Clone()

local prompt: CanvasGroup = getInstance(ReplicatedStorage, "Missions", "Objects", "Prompt"):Clone()
local missionsClose = prompt
	:FindFirstChild("Content")
	:FindFirstChild("Header")
	:FindFirstChild("CloseButton")
	:FindFirstChild("Button") :: ImageButton
local missionList = prompt
	:FindFirstChild("Content")
	:FindFirstChild("Bottom")
	:FindFirstChild("MissionBottomFrame")
	:FindFirstChild("MissionList") :: ScrollingFrame
local missionEntry: ImageButton = missionList:FindFirstChild("MissionEntry"):Clone() :: ImageButton
local categoryList = prompt
	:FindFirstChild("Content")
	:FindFirstChild("Bottom")
	:FindFirstChild("MissionBottomFrame")
	:FindFirstChild("CategoryFrame") :: ScrollingFrame
local categoryEntry: TextButton = categoryList:FindFirstChild("CategoryButton"):Clone() :: TextButton
local missionDetail = prompt
	:FindFirstChild("Content")
	:FindFirstChild("Bottom")
	:FindFirstChild("MissionBottomFrame")
	:FindFirstChild("MissionDetail") :: ScrollingFrame
local detailTask = missionDetail:FindFirstChild("TaskFrame"):Clone() :: Frame
local detailRewards = missionDetail:FindFirstChild("Rewards") :: Frame
local detailReward = detailRewards:FindFirstChild("Reward"):Clone() :: Frame
local buttonConnections: { [string]: RBXScriptConnection } = {}

-- Get all categories that should be displayed in the GUI.
local function getVisibleCategoryIds(): { Types.CategoryId }
	local categoryTable: { [Types.CategoryId]: boolean? } = {}
	local categoryList: { Types.CategoryId } = {}

	for name, mission in MissionsConfig do
		if not mission then
			continue
		end

		-- Check if mission is ever visible.
		local meta = mission.metadata
		if
			meta
			and meta.invisibleWhileActive
			and not meta.visibleAfterComplete
			and not meta.visibleAfterFailed
			and not meta.visibleBeforeUnlocked
		then
			continue
		end

		-- Mission is visible, ensure its category is in the list.
		if not categoryTable[mission.categoryId] then
			table.insert(categoryList, mission.categoryId)
		end
		categoryTable[mission.categoryId] = true
	end

	return categoryList
end

local categories = getVisibleCategoryIds()
local visibleMissions: { Types.MissionId } = {}

local selectedCategory: Types.CategoryId? = categories[1]
local selectedMission: Types.MissionId? = nil

local MissionsUI = {}

-- Show the main missions GUI.
function MissionsUI.showMissionsUI()
	ModalManager.open("Missions")
end

-- Get the missionsGui
function MissionsUI.getMissionsGui(): ScreenGui
	return missionsGui
end

-- Get the missions prompt
function MissionsUI.getMissionsPrompt(): CanvasGroup
	return prompt
end

function MissionsUI.getMissionsHudButton(): GuiButton
	return hudButton
end

-- Get all the children of a UI element that are not layouts.
local function getNonLayoutChildren(element: Instance): { Instance }
	local allChildren = element:GetChildren()
	local nonLayoutChildren: { Instance } = {}
	for index, child in allChildren do
		if child:IsA("UILayout") then
			continue
		end
		table.insert(nonLayoutChildren, child)
	end
	return nonLayoutChildren
end

-- Remove all children from an element except layouts.
local function removeNonLayoutChildren(element: Instance)
	local nonLayoutChildren: { Instance } = getNonLayoutChildren(element)
	for index, child in nonLayoutChildren do
		child.Parent = nil
	end
end

-- Get all the task frames from a mission detail element.
local function getTaskFrames(element: Instance): { Frame }
	local allChildren = element:GetChildren()
	local taskFrames: { Frame } = {}
	for _, child in allChildren do
		if child.Name == "TaskFrame" and child:IsA("Frame") then
			table.insert(taskFrames, child)
		end
	end
	return taskFrames
end

-- Compile a new list of missions that are currently shown on screen and store it.
local function updateVisibleMissions(categoryId: Types.CategoryId?)
	if not categoryId then
		return
	end

	local failedIds = MissionsClient.getFailedMissionIds(categoryId)
	local activeIds = MissionsClient.getActiveMissionIds(categoryId)
	local lockedIds = MissionsClient.getLockedMissionIds(categoryId)
	local completedIds = MissionsClient.getCompletedMissionIds(categoryId)

	local missions: { Types.MissionId } = {}

	for index, missionId in activeIds do
		if not MissionsClient.getMissionMetadata(missionId).invisibleWhileActive then
			if not selectedMission then
				selectedMission = missionId
			end
			table.insert(missions, missionId)
		end
	end

	for index, missionId in lockedIds do
		if MissionsClient.getMissionMetadata(missionId).visibleBeforeUnlocked then
			table.insert(missions, missionId)
		end
	end

	local finishedMissions: { Types.MissionId } = {}

	for index, missionId in failedIds do
		if MissionsClient.getMissionMetadata(missionId).visibleAfterFailed then
			table.insert(finishedMissions, missionId)
		end
	end

	for index, missionId in completedIds do
		if MissionsClient.getMissionMetadata(missionId).visibleAfterComplete then
			table.insert(finishedMissions, missionId)
		end
	end

	table.sort(finishedMissions, function(id1, id2)
		return MissionsClient.getMissionStartTime(id1) < MissionsClient.getMissionStartTime(id2)
	end)

	for index, missionId in finishedMissions do
		table.insert(missions, missionId)
	end

	visibleMissions = missions
end

-- Format the progress label for an overview of all the tasks on a mission.
local function getProgressLabel(missionId: Types.MissionId): string
	local completed = MissionsClient.getCompletedTaskCount(missionId)
	local total = MissionsClient.getTaskCount(missionId)
	return `{completed} / {total} {TranslationStrings.COMPLETE_LOWER}`
end

-- Format the label to display on a locked mission.
local function getLockedLabel(missionId: Types.MissionId): string
	local mission = MissionsConfig[missionId]
	if not mission then
		return TranslationStrings.LOCKED
	end
	if mission.requiredTrackName then
		return TranslationStrings.PREMIUM_PASS_REQUIRED
	end
	if not mission.prerequisites or #mission.prerequisites == 0 then
		return TranslationStrings.LOCKED
	end
	if #mission.prerequisites == 1 then
		return `{TranslationStrings.COMPLETE} {MissionsClient.getMissionMetadata(mission.prerequisites[1]).displayName or mission.prerequisites[1]}`
	end
	return `{TranslationStrings.COMPLETE} {#mission.prerequisites} {TranslationStrings.MISSIONS}`
end

-- Callback for when a visible mission is clicked on in the GUI.
local function missionPressed(index: number)
	local missionIdPressed = visibleMissions[index]

	-- Log the mission opened in analytics funnel.
	MissionsUtils.logFunnelStep(player, missionIdPressed, InstrumentationTypes.FunnelStepName.MissionOpened)

	local currentEntries = getNonLayoutChildren(missionList)
	selectedMission = missionIdPressed

	for index, missionId in visibleMissions do
		local element = currentEntries[index] :: Frame
		local selectedFrame = element:FindFirstChild("SelectedFrame") :: Frame
		if missionId == selectedMission then
			element.BorderSizePixel = 2
			MissionsClient.updateMission(missionId)
			-- Set the SelectedFrame to be visible for the selected mission.
			selectedFrame.Visible = true
		else
			element.BorderSizePixel = 0
			selectedFrame.Visible = false
		end
	end

	MissionsUI.updateTaskList()
end

-- Pad out the text in the display to 4 lines to prevent a massive font.
local function padNewlines(text: string): string
	local lines = #{ text.gmatch(text, " ") }
	for i = lines, 4 do
		text = text .. "\n"
	end
	return text
end

-- Format the label for an individual task's progress.
local function getTaskProgressLabel(missionId: Types.MissionId, taskId: Types.TaskId): string
	local progress = MissionsClient.getTaskProgress(missionId, taskId)
	local target = MissionsClient.getTaskTarget(missionId, taskId)

	local meta = MissionsClient.getTaskMetadata(missionId, taskId)

	if meta.numericType == nil or meta.numericType == Types.FractionType.Fraction then
		return `{formatLargeNumber(progress)} / {formatLargeNumber(target)}`
	end
	if meta.numericType == Types.FractionType.LongFraction then
		return `{progress} / {target}`
	end
	if meta.numericType == Types.FractionType.Percentage then
		return `{math.floor((progress * 100) / target)}%`
	end
	if meta.numericType == Types.FractionType.Boolean then
		return `Incomplete`
	end

	warn(`Invalid progress type {meta.numericType} on mission {missionId}'s task {taskId}`)
	return `{progress} / {target}`
end

-- Format the label for a timed task.
local function getTaskTimeLabel(missionId: Types.MissionId, taskId: Types.TaskId): string
	local progress = MissionsClient.getTaskProgress(missionId, taskId)
	local target = MissionsClient.getTaskTarget(missionId, taskId)

	return `{formatTime(target - progress)}`
end

-- Get the completion fraction of a task.
local function getTaskFractionComplete(missionId: Types.MissionId, taskId: Types.TaskId): number
	local progress = MissionsClient.getTaskProgress(missionId, taskId)
	local target = MissionsClient.getTaskTarget(missionId, taskId)
	return progress / target
end

-- Callback to detect UITimer finishing a task timer, indicating that the task list should be updated.
local function onTaskLabelChange(text: string)
	if text == TranslationStrings.OFFER_EXPIRED then
		MissionsUI.updateTaskList()
	end
end

-- Callback to detect UITimer finishing a mission timer, indicating that the mission should be updated.
local function onExpireLabelChange(text: string, index: number)
	if text == TranslationStrings.OFFER_EXPIRED then
		local element = getNonLayoutChildren(missionList)[index] :: Frame
		local elementStatus = element:FindFirstChild("Status") :: Frame
		local timeFrame = elementStatus:FindFirstChild("TimeFrame") :: Frame
		timeFrame.Visible = false
		MissionsClient.updateMission(visibleMissions[index])
	end
end

-- Callback to detect UITimer finishing a category reset timer.
local function onCategoryLabelChange(text: string, index: number)
	if text == TranslationStrings.OFFER_EXPIRED then
		local categories = getNonLayoutChildren(categoryList)
		local category = categories[index] :: TextButton
		local timerLabel = category:FindFirstChild("ResetTimer") :: TextLabel
		timerLabel.Text = `0s {TranslationStrings.LEFT}`
	end
end

-- Set a UITimer timer immediately so that it won't be blank for a whole second.
local function updateTimerImmediately(timerLabel: TextLabel)
	local endUtc: number = timerLabel:GetAttribute(Attributes.FeaturePackagesEnd)
	local now = DateTime.now()
	local timeRemaining = os.difftime(endUtc, now.UnixTimestamp)

	if timeRemaining <= 0 then
		timerLabel.Text = ""
		return
	end

	local includesSuffix: boolean = timerLabel:GetAttribute(Attributes.FeaturePackagesIncludeSuffix)
	local suffix = if includesSuffix then TranslationStrings.LEFT else nil
	local includesPadding = if includesSuffix then true else false
	local maxUnits = if includesSuffix then 3 else 2
	local formattedTime = formatTime(timeRemaining, maxUnits, includesPadding, suffix)
	timerLabel.Text = formattedTime
end

local function updateSingleTasks()
	if not Constants.Layout.Missions.SingleTaskMode then
		return
	end

	-- Update task progress in the missions list
	local missionEntries = getNonLayoutChildren(missionList)
	for index, missionId in visibleMissions do
		local mission = MissionsConfig[missionId]
		if not mission then
			continue
		end

		local element = missionEntries[index] :: Frame

		local elementStatus = element:FindFirstChild("Status") :: Frame

		local progressLabel = elementStatus:FindFirstChild("ProgressLabel") :: TextLabel
		local infoLabel = elementStatus:FindFirstChild("InfoLabel") :: TextLabel
		local claimButton = elementStatus:FindFirstChild("ClaimButton") :: GuiButton

		if infoLabel.Visible or claimButton.Visible then
			continue
		end

		local singleTaskFrame = elementStatus:FindFirstChild("SingleTask") :: Frame
		local taskProgressLabel = singleTaskFrame:FindFirstChild("ProgressLabel") :: TextLabel
		local taskProgressFrame = singleTaskFrame:FindFirstChild("ProgressFrame") :: Frame
		local taskProgressBar = taskProgressFrame:FindFirstChild("Bar") :: Frame

		local isSingleTask = false
		local singleTaskId = nil
		local singleTask = nil

		-- Verify that there is only one task and get it.
		for taskId, task in mission.tasks do
			-- Too many tasks, don't do anything for single task mode.
			if isSingleTask then
				isSingleTask = false
				break
			end

			isSingleTask = true
			singleTaskId = taskId
			singleTask = task
		end

		-- If there is only one task, skip this mission.
		if not isSingleTask or not singleTaskId or not singleTask then
			singleTaskFrame.Visible = false
			progressLabel.Text = getProgressLabel(missionId)
			continue
		end

		progressLabel.Visible = false
		if MissionsClient.isMissionReadyToClaim(missionId) then
			MissionsUI.updateMissionList()
			return
		end
		singleTaskFrame.Visible = true

		-- Update the progress bar and label depending on task type.
		if singleTask.taskType == Types.TaskType.Count then
			taskProgressLabel.Text = getTaskProgressLabel(missionId, singleTaskId)
			taskProgressBar.Size = UDim2.fromScale(getTaskFractionComplete(missionId, singleTaskId), 1)
			taskProgressBar:RemoveTag(SharedConstants.Tags.Timer.PROGRESS_BAR)
			taskProgressLabel:RemoveTag(SharedConstants.Tags.Timer.TEXT)
		elseif singleTask.taskType == Types.TaskType.Time then
			taskProgressLabel.Text = getTaskTimeLabel(missionId, singleTaskId)
			local progress = MissionsClient.getTaskProgress(missionId, singleTaskId)
			local target = MissionsClient.getTaskTarget(missionId, singleTaskId)
			taskProgressBar.Size = UDim2.fromScale(getTaskFractionComplete(missionId, singleTaskId), 1)
			if MissionsClient.isTaskTimerRunning(missionId, singleTaskId) then
				local start = DateTime.now().UnixTimestamp - progress
				taskProgressBar:SetAttribute(Attributes.FeaturePackagesStart, start)
				taskProgressBar:SetAttribute(Attributes.FeaturePackagesEnd, start + target)
				taskProgressBar:SetAttribute(Attributes.FeaturePackagesMaxUnits, 0)
				taskProgressBar:AddTag(SharedConstants.Tags.Timer.PROGRESS_BAR)
				taskProgressLabel:SetAttribute(Attributes.FeaturePackagesStart, start)
				taskProgressLabel:SetAttribute(Attributes.FeaturePackagesEnd, start + target)
				taskProgressLabel:SetAttribute(Attributes.FeaturePackagesMaxUnits, 0)
				taskProgressLabel:SetAttribute(Attributes.FeaturePackagesIncludeSuffix, false)
				taskProgressLabel:AddTag(SharedConstants.Tags.Timer.TEXT)
				taskProgressLabel.Changed:Connect(function(property: string)
					if property == "Text" then
						onTaskLabelChange(taskProgressLabel.Text)
					end
				end)
			else
				taskProgressBar:RemoveTag(SharedConstants.Tags.Timer.PROGRESS_BAR)
				taskProgressLabel:RemoveTag(SharedConstants.Tags.Timer.TEXT)
			end
		else
			taskProgressLabel.Text = getTaskProgressLabel(missionId, singleTaskId)
			warn(`Unknown task type {singleTask.taskType} in missions page`)
		end
	end
end

-- Refresh the list of tasks on the selected mission.
function MissionsUI.updateTaskList()
	updateSingleTasks()

	if not selectedMission then
		detailRewards.Visible = false

		-- Remove all task frames.
		for _, taskFrame in missionDetail:GetChildren() do
			if taskFrame.Name ~= "TaskFrame" then
				continue
			end

			taskFrame:Destroy()
		end
	else
		-- Update task progress in the missions list
		local missionEntries = getNonLayoutChildren(missionList)
		for index, missionId in visibleMissions do
			local element = missionEntries[index] :: Frame

			local elementStatus = element:FindFirstChild("Status") :: Frame

			local progressLabel = elementStatus:FindFirstChild("ProgressLabel") :: TextLabel
			if not progressLabel.Visible then
				continue
			end

			progressLabel.Text = getProgressLabel(missionId)
			if MissionsClient.isMissionReadyToClaim(missionId) then
				MissionsUI.updateMissionList()
				return
			end
		end

		-- Update mission rewards display
		local meta = MissionsClient.getMissionMetadata(selectedMission)
		if meta.rewards then
			detailRewards.Visible = true
			removeNonLayoutChildren(detailRewards)
			for index, reward in meta.rewards do
				local entry = detailReward:Clone()
				local icon = entry:FindFirstChild("ImageLabel") :: ImageLabel
				local name = entry:FindFirstChild("TextLabel") :: TextLabel
				icon.Image = `rbxthumb://type=Asset&id={reward.icon}&w=420&h=420`
				name.Text = reward.displayName or ""
				entry.Parent = detailRewards
			end
		else
			detailRewards.Visible = false
			removeNonLayoutChildren(detailRewards)
		end

		local mission = MissionsConfig[selectedMission]
		if not mission then
			return
		end

		-- Update tasks
		local totalSize = 0
		for taskId, task in mission.tasks do
			totalSize = totalSize + 1
		end
		local currentEntries = getTaskFrames(missionDetail)

		-- Add new task Entries if there are not enough
		for index = #currentEntries + 1, totalSize do
			local entry = detailTask:Clone()
			entry.Parent = missionDetail
			currentEntries[index] = entry
		end

		-- Remove extra task Entries if there are too many
		for index = totalSize + 1, #currentEntries do
			currentEntries[index].Parent = nil
		end

		local index = 0
		for taskId, task in mission.tasks do
			index = index + 1
			local entry = currentEntries[index] :: Frame

			local content = entry:FindFirstChild("Content") :: Frame
			local top = content:FindFirstChild("Top") :: Frame
			local bottom = content:FindFirstChild("Bottom") :: Frame

			local checkmark = top:FindFirstChild("Checkmark") :: ImageLabel
			local nameLabel = top:FindFirstChild("NameLabel") :: TextLabel
			local progressLabel = top:FindFirstChild("ProgressLabel") :: TextLabel
			local progressFrame = top:FindFirstChild("ProgressFrame") :: Frame
			local progressBar = progressFrame:FindFirstChild("Bar") :: Frame

			-- By default, hide CTA button and have normal sizing on TaskFrame+Top+Bottom
			local callToActionButton = bottom:FindFirstChild("CallToActionButton") :: TextButton
			callToActionButton.Visible = false
			entry.Size = detailTask.Size
			top.Size = UDim2.fromScale(1, 1)
			bottom.Size = UDim2.fromScale(0, 0)
			bottom.Visible = false

			if buttonConnections[tostring(callToActionButton)] then
				buttonConnections[tostring(callToActionButton)]:Disconnect()
			end

			checkmark.Visible = false
			progressFrame.Visible = true
			nameLabel.Text = MissionsClient.getTaskMetadata(selectedMission, taskId).displayName or taskId

			if MissionsClient.isTaskCompleted(selectedMission, taskId) then
				checkmark.Visible = true
				progressLabel.Visible = false
				progressFrame.Visible = false
			else
				progressLabel.Visible = true

				if not task then
					continue
				end

				-- Keep track of the connections to task call to action buttons
				if task.callToAction then
					local connection = callToActionButton.Activated:Connect(function()
						MissionsClient.onCallToActionButtonClicked(selectedMission, taskId)
					end)
					buttonConnections[tostring(callToActionButton)] = connection
					local callToActionButtonTextLabel = callToActionButton:FindFirstChild("TextLabel") :: TextLabel

					callToActionButtonTextLabel.Text = task.callToAction.buttonText or TranslationStrings.GO
					callToActionButton.Visible = true
					entry.Size = UDim2.fromScale(detailTask.Size.X.Scale, detailTask.Size.Y.Scale * 2)
					top.Size = UDim2.fromScale(1, 0.5)
					bottom.Size = UDim2.fromScale(1, 0.5)
					bottom.Visible = true
				end

				if task.taskType == Types.TaskType.Count then
					progressLabel.Text = getTaskProgressLabel(selectedMission, taskId)
					progressBar.Size = UDim2.fromScale(getTaskFractionComplete(selectedMission, taskId), 1)
					progressBar:RemoveTag(SharedConstants.Tags.Timer.PROGRESS_BAR)
					progressLabel:RemoveTag(SharedConstants.Tags.Timer.TEXT)
				elseif task.taskType == Types.TaskType.Time then
					progressLabel.Text = getTaskTimeLabel(selectedMission, taskId)
					local progress = MissionsClient.getTaskProgress(selectedMission, taskId)
					local target = MissionsClient.getTaskTarget(selectedMission, taskId)
					progressBar.Size = UDim2.fromScale(getTaskFractionComplete(selectedMission, taskId), 1)
					if MissionsClient.isTaskTimerRunning(selectedMission, taskId) then
						local start = DateTime.now().UnixTimestamp - progress
						progressBar:SetAttribute(Attributes.FeaturePackagesStart, start)
						progressBar:SetAttribute(Attributes.FeaturePackagesEnd, start + target)
						progressBar:SetAttribute(Attributes.FeaturePackagesMaxUnits, 0)
						progressBar:AddTag(SharedConstants.Tags.Timer.PROGRESS_BAR)
						progressLabel:SetAttribute(Attributes.FeaturePackagesStart, start)
						progressLabel:SetAttribute(Attributes.FeaturePackagesEnd, start + target)
						progressLabel:SetAttribute(Attributes.FeaturePackagesMaxUnits, 0)
						progressLabel:SetAttribute(Attributes.FeaturePackagesIncludeSuffix, false)
						progressLabel:AddTag(SharedConstants.Tags.Timer.TEXT)
						progressLabel.Changed:Connect(function(property: string)
							if property == "Text" then
								onTaskLabelChange(progressLabel.Text)
							end
						end)
					else
						progressBar:RemoveTag(SharedConstants.Tags.Timer.PROGRESS_BAR)
						progressLabel:RemoveTag(SharedConstants.Tags.Timer.TEXT)
					end
				else
					progressLabel.Text = getTaskProgressLabel(selectedMission, taskId)
					warn(`Unknown task type {task.taskType} in missions page`)
				end
			end
		end
	end
end

-- Refresh the list of missions seen on the GUI.
function MissionsUI.updateMissionList()
	updateVisibleMissions(selectedCategory)

	-- Check if the previously selected mission exists
	local foundSelectedMission = false
	for index, missionId in visibleMissions do
		if missionId == selectedMission then
			foundSelectedMission = true
			break
		end
	end

	-- If the selected mission does not exist, then find a new one
	if not foundSelectedMission then
		selectedMission = nil
		updateVisibleMissions(selectedCategory)
		if not selectedMission and #visibleMissions > 0 then
			selectedMission = visibleMissions[1]
		end
	end

	local totalSize = #visibleMissions
	local currentEntries = getNonLayoutChildren(missionList)

	-- Add new mission Entries if there are not enough
	for index = #currentEntries + 1, totalSize do
		local entry = missionEntry:Clone()
		entry.Parent = missionList
		entry.Activated:Connect(function()
			missionPressed(index)
		end)

		local entryStatus = entry:FindFirstChild("Status") :: Frame

		local claimButton = entryStatus:FindFirstChild("ClaimButton") :: TextButton
		claimButton.Activated:Connect(function()
			local rewardsContent = prompt
				:FindFirstChild("Content")
				:FindFirstChild("Bottom")
				:FindFirstChild("MissionBottomFrame")
				:FindFirstChild("MissionDetail")
				:FindFirstChild("Rewards")

			local imageLabels = {}

			local rewardChildren = getNonLayoutChildren(rewardsContent)
			for index, child in rewardChildren do
				local imageLabel = child:FindFirstChild("ImageLabel") :: ImageLabel
				table.insert(imageLabels, imageLabel)
			end

			playPurchaseEffect(imageLabels)

			MissionsClient.claimMission(visibleMissions[index])
		end)

		local claimButtonTextLabel = claimButton:FindFirstChild("TextLabel") :: TextLabel
		claimButtonTextLabel.Text = TranslationStrings.CLAIM_REWARDS

		currentEntries[index] = entry
	end

	-- Remove extra mission Entries if there are too many
	for index = totalSize + 1, #currentEntries do
		currentEntries[index].Parent = nil
	end

	-- Update all the entries in the UI
	for index, missionId in visibleMissions do
		local element = currentEntries[index] :: Frame
		if missionId == selectedMission then
			element.BorderSizePixel = 2
		else
			element.BorderSizePixel = 0
		end

		local elementStatus = element:FindFirstChild("Status") :: Frame

		local meta = MissionsClient.getMissionMetadata(missionId)

		local nameLabel = element:FindFirstChild("NameLabel") :: TextLabel
		nameLabel.Text = meta.displayName or missionId

		local claimButton = elementStatus:FindFirstChild("ClaimButton") :: TextButton

		local timeFrame = elementStatus:FindFirstChild("TimeFrame") :: Frame
		local timeLabel = timeFrame:FindFirstChild("TextLabel") :: TextLabel
		local infoLabel = elementStatus:FindFirstChild("InfoLabel") :: TextLabel
		local progressLabel = elementStatus:FindFirstChild("ProgressLabel") :: TextLabel
		local singleTaskFrame = elementStatus:FindFirstChild("SingleTask") :: Frame

		nameLabel.TextColor3 = Constants.Colors.TEXT_ENABLED
		infoLabel.TextColor3 = Constants.Colors.TEXT_DISABLED

		claimButton.Visible = false
		progressLabel.Text = getProgressLabel(missionId)
		progressLabel.Visible = true
		infoLabel.Visible = false
		timeFrame.Visible = false

		local expireTime = MissionsClient.getMissionFailTime(missionId)

		if expireTime then
			timeLabel:SetAttribute(Attributes.FeaturePackagesEnd, expireTime)
			timeLabel:SetAttribute(Attributes.FeaturePackagesIncludeSuffix, true)
			timeLabel:AddTag(SharedConstants.Tags.Timer.TEXT)
			timeLabel:SetAttribute(Attributes.FeaturePackagesMaxUnits, 0)
			updateTimerImmediately(timeLabel)
			timeLabel.Changed:Connect(function(property: string)
				if property == "Text" then
					onExpireLabelChange(timeLabel.Text, index)
				end
			end)
			timeFrame.Visible = true
		end

		if MissionsClient.isMissionReadyToClaim(missionId) then
			claimButton.Visible = true
			infoLabel.Visible = false
			progressLabel.Visible = false
			singleTaskFrame.Visible = false
		elseif MissionsClient.isMissionCompleted(missionId) then
			progressLabel.Visible = false
			infoLabel.Text = TranslationStrings.COMPLETED
			infoLabel.Visible = true
			nameLabel.TextColor3 = Constants.Colors.TEXT_DISABLED
			singleTaskFrame.Visible = false
		elseif MissionsClient.isMissionFailed(missionId) then
			progressLabel.Visible = false
			infoLabel.Text = TranslationStrings.FAILED
			infoLabel.Visible = true
			nameLabel.TextColor3 = Constants.Colors.TEXT_DISABLED
			singleTaskFrame.Visible = false
		elseif MissionsClient.isMissionLocked(missionId) then
			progressLabel.Visible = false
			infoLabel.Text = getLockedLabel(missionId)
			infoLabel.Visible = true
			nameLabel.TextColor3 = Constants.Colors.TEXT_DISABLED
			singleTaskFrame.Visible = false

			local availableTime = MissionsClient.getMissionUnlockTime(missionId)
			if availableTime then
				timeLabel:SetAttribute(Attributes.FeaturePackagesEnd, availableTime)
				timeLabel:SetAttribute(Attributes.FeaturePackagesIncludeSuffix, true)
				timeLabel:SetAttribute(Attributes.FeaturePackagesMaxUnits, 0)
				timeLabel:AddTag(SharedConstants.Tags.Timer.TEXT)
				updateTimerImmediately(timeLabel)
				timeLabel.Changed:Connect(function(property: string)
					if property == "Text" then
						onExpireLabelChange(timeLabel.Text, index)
					end
				end)
				timeFrame.Visible = true
			end
		end
	end

	MissionsUI.updateTaskList()
	MissionsClient.updateSeasonMissionClaimableStatus()
end

-- Close the main Missions GUI.
function MissionsUI.closeMissionsUI()
	ModalManager.close("Missions")
end

-- Callback for when a category is pressed to update the list of missions.
local function categoryPressed(categoryId: Types.CategoryId)
	selectedCategory = categoryId
	selectedMission = nil

	local currentEntries = getNonLayoutChildren(categoryList)

	for index, name in categories do
		local button = currentEntries[index] :: TextButton
		local label = button:FindFirstChild("CategoryLabel") :: TextLabel
		local timeLabel = button:FindFirstChild("ResetTimer") :: TextLabel

		if name == selectedCategory then
			label.TextColor3 = Constants.Colors.TEXT_ENABLED
			timeLabel.TextColor3 = Constants.Colors.TEXT_ENABLED
		else
			label.TextColor3 = Constants.Colors.TEXT_DISABLED
			timeLabel.TextColor3 = Constants.Colors.TEXT_DISABLED
		end
	end

	MissionsUI.updateMissionList()
end

-- Update the list of categories on the top bar.
function MissionsUI.updateCategoryList()
	removeNonLayoutChildren(categoryList)

	for index, name in categories do
		local button = categoryEntry:Clone()
		local label = button:FindFirstChild("CategoryLabel") :: TextLabel
		local timeLabel = button:FindFirstChild("ResetTimer") :: TextLabel
		local circle = button:FindFirstChild("Circle") :: ImageLabel

		button.Activated:Connect(function()
			categoryPressed(name)
		end)
		button.Parent = categoryList

		label.Text = name
		if name == selectedCategory then
			label.TextColor3 = Constants.Colors.TEXT_ENABLED
			timeLabel.TextColor3 = Constants.Colors.TEXT_ENABLED
			circle.BackgroundColor3 = Constants.Colors.TEXT_ENABLED
		else
			label.TextColor3 = Constants.Colors.TEXT_DISABLED
			timeLabel.TextColor3 = Constants.Colors.TEXT_DISABLED
			circle.BackgroundColor3 = Constants.Colors.TEXT_DISABLED
		end

		local timer = MissionsClient.getCategoryResetTimer(name)
		if timer then
			timeLabel.Visible = true
			timeLabel:SetAttribute(Attributes.FeaturePackagesEnd, TimerSystem.getEndTime(timer))
			timeLabel:SetAttribute(Attributes.FeaturePackagesIncludeSuffix, true)
			timeLabel:SetAttribute(Attributes.FeaturePackagesMaxUnits, 0)
			timeLabel:AddTag(SharedConstants.Tags.Timer.TEXT)
			updateTimerImmediately(timeLabel)
			timeLabel.Changed:Connect(function(property: string)
				if property == "Text" then
					onCategoryLabelChange(timeLabel.Text, index)
				end
			end)
			circle.Visible = true
		else
			timeLabel.Visible = false
			timeLabel.Text = ""
			circle.Visible = false
		end
	end
end

local function connectHudButton()
	local isAlreadyOpen = prompt.Visible
	if isAlreadyOpen then
		MissionsUI.closeMissionsUI()
	else
		MissionsUI.showMissionsUI()
	end
end

local function initialize()
	prompt.Visible = false
	prompt.Parent = missionsGui

	local missionButtonFrame = prompt
		:FindFirstChild("Content")
		:FindFirstChild("Header")
		:FindFirstChild("Tabs")
		:FindFirstChild("MissionButtonFrame") :: Frame
	local button = missionButtonFrame:FindFirstChild("MissionButton") :: TextButton

	button.Text = TranslationStrings.MISSIONS

	local rewardsTitle = missionDetail:FindFirstChild("RewardsTitle") :: TextLabel
	rewardsTitle.Text = TranslationStrings.REWARDS

	ModalManager.set("Missions", prompt)

	missionsClose.Activated:Connect(MissionsUI.closeMissionsUI)
	hudButton.Activated:Connect(connectHudButton)

	local primaryTextLabel: TextLabel = getInstance(hudButton, "PrimaryText")
	primaryTextLabel.Text = TranslationStrings.MISSIONS
	hudButton.Parent = hudButtonParent

	removeNonLayoutChildren(missionList)
	MissionsUI.updateCategoryList()
	MissionsUI.updateMissionList()
	MissionsUI.updateTaskList()
end

initialize()

return MissionsUI
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>